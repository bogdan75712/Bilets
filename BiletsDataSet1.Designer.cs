////------------------------------------------------------------------------------
//// <auto-generated>
////     Этот код создан программой.
////     Исполняемая версия:4.0.30319.42000
////
////     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
////     повторной генерации кода.
//// </auto-generated>
////------------------------------------------------------------------------------

//#pragma warning disable 1591

//namespace KaSSierYaremko {
    
    
//    /// <summary>
//    ///Represents a strongly typed in-memory cache of data.
//    ///</summary>
//    [global::System.Serializable()]
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
//    [global::System.Xml.Serialization.XmlRootAttribute("BiletsDataSet")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
//    public partial class BiletsDataSet : global::System.Data.DataSet {
        
//        private Event_StatusDataTable tableEvent_Status;
        
//        private EventsDataTable tableEvents;
        
//        private HallDataTable tableHall;
        
//        private LogingDataTable tableLoging;
        
//        private PlaceDataTable tablePlace;
        
//        private RoleDataTable tableRole;
        
//        private SeatDataTable tableSeat;
        
//        private SectorDataTable tableSector;
        
//        private TicketsDataTable tableTickets;
        
//        private TicketTypeDataTable tableTicketType;
        
//        private UsersDataTable tableUsers;
        
//        private VisitorsDataTable tableVisitors;
        
//        private global::System.Data.DataRelation relationFK_Events_Event_Status;
        
//        private global::System.Data.DataRelation relationFK_Events_Users;
        
//        private global::System.Data.DataRelation relationFK_Hall_Sector;
        
//        private global::System.Data.DataRelation relationFK_Place_Hall;
        
//        private global::System.Data.DataRelation relationFK_Sector_Seat;
        
//        private global::System.Data.DataRelation relationFK_Tickets_Events;
        
//        private global::System.Data.DataRelation relationFK_Tickets_Place;
        
//        private global::System.Data.DataRelation relationFK_Tickets_TicketType;
        
//        private global::System.Data.DataRelation relationFK_Users_Role;
        
//        private global::System.Data.DataRelation relationFK_Visitors_Tickets;
        
//        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public BiletsDataSet() {
//            this.BeginInit();
//            this.InitClass();
//            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
//            base.Tables.CollectionChanged += schemaChangedHandler;
//            base.Relations.CollectionChanged += schemaChangedHandler;
//            this.EndInit();
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected BiletsDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                base(info, context, false) {
//            if ((this.IsBinarySerialized(info, context) == true)) {
//                this.InitVars(false);
//                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
//                this.Tables.CollectionChanged += schemaChangedHandler1;
//                this.Relations.CollectionChanged += schemaChangedHandler1;
//                return;
//            }
//            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
//            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
//                global::System.Data.DataSet ds = new global::System.Data.DataSet();
//                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
//                if ((ds.Tables["Event_Status"] != null)) {
//                    base.Tables.Add(new Event_StatusDataTable(ds.Tables["Event_Status"]));
//                }
//                if ((ds.Tables["Events"] != null)) {
//                    base.Tables.Add(new EventsDataTable(ds.Tables["Events"]));
//                }
//                if ((ds.Tables["Hall"] != null)) {
//                    base.Tables.Add(new HallDataTable(ds.Tables["Hall"]));
//                }
//                if ((ds.Tables["Loging"] != null)) {
//                    base.Tables.Add(new LogingDataTable(ds.Tables["Loging"]));
//                }
//                if ((ds.Tables["Place"] != null)) {
//                    base.Tables.Add(new PlaceDataTable(ds.Tables["Place"]));
//                }
//                if ((ds.Tables["Role"] != null)) {
//                    base.Tables.Add(new RoleDataTable(ds.Tables["Role"]));
//                }
//                if ((ds.Tables["Seat"] != null)) {
//                    base.Tables.Add(new SeatDataTable(ds.Tables["Seat"]));
//                }
//                if ((ds.Tables["Sector"] != null)) {
//                    base.Tables.Add(new SectorDataTable(ds.Tables["Sector"]));
//                }
//                if ((ds.Tables["Tickets"] != null)) {
//                    base.Tables.Add(new TicketsDataTable(ds.Tables["Tickets"]));
//                }
//                if ((ds.Tables["TicketType"] != null)) {
//                    base.Tables.Add(new TicketTypeDataTable(ds.Tables["TicketType"]));
//                }
//                if ((ds.Tables["Users"] != null)) {
//                    base.Tables.Add(new UsersDataTable(ds.Tables["Users"]));
//                }
//                if ((ds.Tables["Visitors"] != null)) {
//                    base.Tables.Add(new VisitorsDataTable(ds.Tables["Visitors"]));
//                }
//                this.DataSetName = ds.DataSetName;
//                this.Prefix = ds.Prefix;
//                this.Namespace = ds.Namespace;
//                this.Locale = ds.Locale;
//                this.CaseSensitive = ds.CaseSensitive;
//                this.EnforceConstraints = ds.EnforceConstraints;
//                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
//                this.InitVars();
//            }
//            else {
//                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
//            }
//            this.GetSerializationData(info, context);
//            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
//            base.Tables.CollectionChanged += schemaChangedHandler;
//            this.Relations.CollectionChanged += schemaChangedHandler;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public Event_StatusDataTable Event_Status {
//            get {
//                return this.tableEvent_Status;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public EventsDataTable Events {
//            get {
//                return this.tableEvents;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public HallDataTable Hall {
//            get {
//                return this.tableHall;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public LogingDataTable Loging {
//            get {
//                return this.tableLoging;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public PlaceDataTable Place {
//            get {
//                return this.tablePlace;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public RoleDataTable Role {
//            get {
//                return this.tableRole;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public SeatDataTable Seat {
//            get {
//                return this.tableSeat;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public SectorDataTable Sector {
//            get {
//                return this.tableSector;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public TicketsDataTable Tickets {
//            get {
//                return this.tableTickets;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public TicketTypeDataTable TicketType {
//            get {
//                return this.tableTicketType;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public UsersDataTable Users {
//            get {
//                return this.tableUsers;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
//        public VisitorsDataTable Visitors {
//            get {
//                return this.tableVisitors;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.BrowsableAttribute(true)]
//        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
//        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
//            get {
//                return this._schemaSerializationMode;
//            }
//            set {
//                this._schemaSerializationMode = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
//        public new global::System.Data.DataTableCollection Tables {
//            get {
//                return base.Tables;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
//        public new global::System.Data.DataRelationCollection Relations {
//            get {
//                return base.Relations;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected override void InitializeDerivedDataSet() {
//            this.BeginInit();
//            this.InitClass();
//            this.EndInit();
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public override global::System.Data.DataSet Clone() {
//            BiletsDataSet cln = ((BiletsDataSet)(base.Clone()));
//            cln.InitVars();
//            cln.SchemaSerializationMode = this.SchemaSerializationMode;
//            return cln;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected override bool ShouldSerializeTables() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected override bool ShouldSerializeRelations() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
//            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
//                this.Reset();
//                global::System.Data.DataSet ds = new global::System.Data.DataSet();
//                ds.ReadXml(reader);
//                if ((ds.Tables["Event_Status"] != null)) {
//                    base.Tables.Add(new Event_StatusDataTable(ds.Tables["Event_Status"]));
//                }
//                if ((ds.Tables["Events"] != null)) {
//                    base.Tables.Add(new EventsDataTable(ds.Tables["Events"]));
//                }
//                if ((ds.Tables["Hall"] != null)) {
//                    base.Tables.Add(new HallDataTable(ds.Tables["Hall"]));
//                }
//                if ((ds.Tables["Loging"] != null)) {
//                    base.Tables.Add(new LogingDataTable(ds.Tables["Loging"]));
//                }
//                if ((ds.Tables["Place"] != null)) {
//                    base.Tables.Add(new PlaceDataTable(ds.Tables["Place"]));
//                }
//                if ((ds.Tables["Role"] != null)) {
//                    base.Tables.Add(new RoleDataTable(ds.Tables["Role"]));
//                }
//                if ((ds.Tables["Seat"] != null)) {
//                    base.Tables.Add(new SeatDataTable(ds.Tables["Seat"]));
//                }
//                if ((ds.Tables["Sector"] != null)) {
//                    base.Tables.Add(new SectorDataTable(ds.Tables["Sector"]));
//                }
//                if ((ds.Tables["Tickets"] != null)) {
//                    base.Tables.Add(new TicketsDataTable(ds.Tables["Tickets"]));
//                }
//                if ((ds.Tables["TicketType"] != null)) {
//                    base.Tables.Add(new TicketTypeDataTable(ds.Tables["TicketType"]));
//                }
//                if ((ds.Tables["Users"] != null)) {
//                    base.Tables.Add(new UsersDataTable(ds.Tables["Users"]));
//                }
//                if ((ds.Tables["Visitors"] != null)) {
//                    base.Tables.Add(new VisitorsDataTable(ds.Tables["Visitors"]));
//                }
//                this.DataSetName = ds.DataSetName;
//                this.Prefix = ds.Prefix;
//                this.Namespace = ds.Namespace;
//                this.Locale = ds.Locale;
//                this.CaseSensitive = ds.CaseSensitive;
//                this.EnforceConstraints = ds.EnforceConstraints;
//                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
//                this.InitVars();
//            }
//            else {
//                this.ReadXml(reader);
//                this.InitVars();
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
//            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
//            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
//            stream.Position = 0;
//            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal void InitVars() {
//            this.InitVars(true);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal void InitVars(bool initTable) {
//            this.tableEvent_Status = ((Event_StatusDataTable)(base.Tables["Event_Status"]));
//            if ((initTable == true)) {
//                if ((this.tableEvent_Status != null)) {
//                    this.tableEvent_Status.InitVars();
//                }
//            }
//            this.tableEvents = ((EventsDataTable)(base.Tables["Events"]));
//            if ((initTable == true)) {
//                if ((this.tableEvents != null)) {
//                    this.tableEvents.InitVars();
//                }
//            }
//            this.tableHall = ((HallDataTable)(base.Tables["Hall"]));
//            if ((initTable == true)) {
//                if ((this.tableHall != null)) {
//                    this.tableHall.InitVars();
//                }
//            }
//            this.tableLoging = ((LogingDataTable)(base.Tables["Loging"]));
//            if ((initTable == true)) {
//                if ((this.tableLoging != null)) {
//                    this.tableLoging.InitVars();
//                }
//            }
//            this.tablePlace = ((PlaceDataTable)(base.Tables["Place"]));
//            if ((initTable == true)) {
//                if ((this.tablePlace != null)) {
//                    this.tablePlace.InitVars();
//                }
//            }
//            this.tableRole = ((RoleDataTable)(base.Tables["Role"]));
//            if ((initTable == true)) {
//                if ((this.tableRole != null)) {
//                    this.tableRole.InitVars();
//                }
//            }
//            this.tableSeat = ((SeatDataTable)(base.Tables["Seat"]));
//            if ((initTable == true)) {
//                if ((this.tableSeat != null)) {
//                    this.tableSeat.InitVars();
//                }
//            }
//            this.tableSector = ((SectorDataTable)(base.Tables["Sector"]));
//            if ((initTable == true)) {
//                if ((this.tableSector != null)) {
//                    this.tableSector.InitVars();
//                }
//            }
//            this.tableTickets = ((TicketsDataTable)(base.Tables["Tickets"]));
//            if ((initTable == true)) {
//                if ((this.tableTickets != null)) {
//                    this.tableTickets.InitVars();
//                }
//            }
//            this.tableTicketType = ((TicketTypeDataTable)(base.Tables["TicketType"]));
//            if ((initTable == true)) {
//                if ((this.tableTicketType != null)) {
//                    this.tableTicketType.InitVars();
//                }
//            }
//            this.tableUsers = ((UsersDataTable)(base.Tables["Users"]));
//            if ((initTable == true)) {
//                if ((this.tableUsers != null)) {
//                    this.tableUsers.InitVars();
//                }
//            }
//            this.tableVisitors = ((VisitorsDataTable)(base.Tables["Visitors"]));
//            if ((initTable == true)) {
//                if ((this.tableVisitors != null)) {
//                    this.tableVisitors.InitVars();
//                }
//            }
//            this.relationFK_Events_Event_Status = this.Relations["FK_Events_Event_Status"];
//            this.relationFK_Events_Users = this.Relations["FK_Events_Users"];
//            this.relationFK_Hall_Sector = this.Relations["FK_Hall_Sector"];
//            this.relationFK_Place_Hall = this.Relations["FK_Place_Hall"];
//            this.relationFK_Sector_Seat = this.Relations["FK_Sector_Seat"];
//            this.relationFK_Tickets_Events = this.Relations["FK_Tickets_Events"];
//            this.relationFK_Tickets_Place = this.Relations["FK_Tickets_Place"];
//            this.relationFK_Tickets_TicketType = this.Relations["FK_Tickets_TicketType"];
//            this.relationFK_Users_Role = this.Relations["FK_Users_Role"];
//            this.relationFK_Visitors_Tickets = this.Relations["FK_Visitors_Tickets"];
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitClass() {
//            this.DataSetName = "BiletsDataSet";
//            this.Prefix = "";
//            this.Namespace = "http://tempuri.org/BiletsDataSet.xsd";
//            this.EnforceConstraints = true;
//            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
//            this.tableEvent_Status = new Event_StatusDataTable();
//            base.Tables.Add(this.tableEvent_Status);
//            this.tableEvents = new EventsDataTable();
//            base.Tables.Add(this.tableEvents);
//            this.tableHall = new HallDataTable();
//            base.Tables.Add(this.tableHall);
//            this.tableLoging = new LogingDataTable();
//            base.Tables.Add(this.tableLoging);
//            this.tablePlace = new PlaceDataTable();
//            base.Tables.Add(this.tablePlace);
//            this.tableRole = new RoleDataTable();
//            base.Tables.Add(this.tableRole);
//            this.tableSeat = new SeatDataTable();
//            base.Tables.Add(this.tableSeat);
//            this.tableSector = new SectorDataTable();
//            base.Tables.Add(this.tableSector);
//            this.tableTickets = new TicketsDataTable();
//            base.Tables.Add(this.tableTickets);
//            this.tableTicketType = new TicketTypeDataTable();
//            base.Tables.Add(this.tableTicketType);
//            this.tableUsers = new UsersDataTable();
//            base.Tables.Add(this.tableUsers);
//            this.tableVisitors = new VisitorsDataTable();
//            base.Tables.Add(this.tableVisitors);
//            this.relationFK_Events_Event_Status = new global::System.Data.DataRelation("FK_Events_Event_Status", new global::System.Data.DataColumn[] {
//                        this.tableEvent_Status.IDColumn}, new global::System.Data.DataColumn[] {
//                        this.tableEvents.IDStatusColumn}, false);
//            this.Relations.Add(this.relationFK_Events_Event_Status);
//            this.relationFK_Events_Users = new global::System.Data.DataRelation("FK_Events_Users", new global::System.Data.DataColumn[] {
//                        this.tableUsers.IDColumn}, new global::System.Data.DataColumn[] {
//                        this.tableEvents.IDUserColumn}, false);
//            this.Relations.Add(this.relationFK_Events_Users);
//            this.relationFK_Hall_Sector = new global::System.Data.DataRelation("FK_Hall_Sector", new global::System.Data.DataColumn[] {
//                        this.tableSector.IDColumn}, new global::System.Data.DataColumn[] {
//                        this.tableHall.IDSectorColumn}, false);
//            this.Relations.Add(this.relationFK_Hall_Sector);
//            this.relationFK_Place_Hall = new global::System.Data.DataRelation("FK_Place_Hall", new global::System.Data.DataColumn[] {
//                        this.tableHall.IDColumn}, new global::System.Data.DataColumn[] {
//                        this.tablePlace.IDHallColumn}, false);
//            this.Relations.Add(this.relationFK_Place_Hall);
//            this.relationFK_Sector_Seat = new global::System.Data.DataRelation("FK_Sector_Seat", new global::System.Data.DataColumn[] {
//                        this.tableSeat.IDColumn}, new global::System.Data.DataColumn[] {
//                        this.tableSector.IDSeatColumn}, false);
//            this.Relations.Add(this.relationFK_Sector_Seat);
//            this.relationFK_Tickets_Events = new global::System.Data.DataRelation("FK_Tickets_Events", new global::System.Data.DataColumn[] {
//                        this.tableEvents.IDColumn}, new global::System.Data.DataColumn[] {
//                        this.tableTickets.IDEventColumn}, false);
//            this.Relations.Add(this.relationFK_Tickets_Events);
//            this.relationFK_Tickets_Place = new global::System.Data.DataRelation("FK_Tickets_Place", new global::System.Data.DataColumn[] {
//                        this.tablePlace.IDColumn}, new global::System.Data.DataColumn[] {
//                        this.tableTickets.IDPlaceColumn}, false);
//            this.Relations.Add(this.relationFK_Tickets_Place);
//            this.relationFK_Tickets_TicketType = new global::System.Data.DataRelation("FK_Tickets_TicketType", new global::System.Data.DataColumn[] {
//                        this.tableTicketType.IDColumn}, new global::System.Data.DataColumn[] {
//                        this.tableTickets.IDTypeColumn}, false);
//            this.Relations.Add(this.relationFK_Tickets_TicketType);
//            this.relationFK_Users_Role = new global::System.Data.DataRelation("FK_Users_Role", new global::System.Data.DataColumn[] {
//                        this.tableRole.IDColumn}, new global::System.Data.DataColumn[] {
//                        this.tableUsers.IDRoleColumn}, false);
//            this.Relations.Add(this.relationFK_Users_Role);
//            this.relationFK_Visitors_Tickets = new global::System.Data.DataRelation("FK_Visitors_Tickets", new global::System.Data.DataColumn[] {
//                        this.tableTickets.IDColumn}, new global::System.Data.DataColumn[] {
//                        this.tableVisitors.IDTicketColumn}, false);
//            this.Relations.Add(this.relationFK_Visitors_Tickets);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private bool ShouldSerializeEvent_Status() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private bool ShouldSerializeEvents() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private bool ShouldSerializeHall() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private bool ShouldSerializeLoging() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private bool ShouldSerializePlace() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private bool ShouldSerializeRole() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private bool ShouldSerializeSeat() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private bool ShouldSerializeSector() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private bool ShouldSerializeTickets() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private bool ShouldSerializeTicketType() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private bool ShouldSerializeUsers() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private bool ShouldSerializeVisitors() {
//            return false;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
//            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
//                this.InitVars();
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//            BiletsDataSet ds = new BiletsDataSet();
//            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
//            any.Namespace = ds.Namespace;
//            sequence.Items.Add(any);
//            type.Particle = sequence;
//            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//            if (xs.Contains(dsSchema.TargetNamespace)) {
//                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                try {
//                    global::System.Xml.Schema.XmlSchema schema = null;
//                    dsSchema.Write(s1);
//                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                        s2.SetLength(0);
//                        schema.Write(s2);
//                        if ((s1.Length == s2.Length)) {
//                            s1.Position = 0;
//                            s2.Position = 0;
//                            for (; ((s1.Position != s1.Length) 
//                                        && (s1.ReadByte() == s2.ReadByte())); ) {
//                                ;
//                            }
//                            if ((s1.Position == s1.Length)) {
//                                return type;
//                            }
//                        }
//                    }
//                }
//                finally {
//                    if ((s1 != null)) {
//                        s1.Close();
//                    }
//                    if ((s2 != null)) {
//                        s2.Close();
//                    }
//                }
//            }
//            xs.Add(dsSchema);
//            return type;
//        }
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public delegate void Event_StatusRowChangeEventHandler(object sender, Event_StatusRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public delegate void EventsRowChangeEventHandler(object sender, EventsRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public delegate void HallRowChangeEventHandler(object sender, HallRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public delegate void LogingRowChangeEventHandler(object sender, LogingRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public delegate void PlaceRowChangeEventHandler(object sender, PlaceRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public delegate void RoleRowChangeEventHandler(object sender, RoleRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public delegate void SeatRowChangeEventHandler(object sender, SeatRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public delegate void SectorRowChangeEventHandler(object sender, SectorRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public delegate void TicketsRowChangeEventHandler(object sender, TicketsRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public delegate void TicketTypeRowChangeEventHandler(object sender, TicketTypeRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public delegate void UsersRowChangeEventHandler(object sender, UsersRowChangeEvent e);
        
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public delegate void VisitorsRowChangeEventHandler(object sender, VisitorsRowChangeEvent e);
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class Event_StatusDataTable : global::System.Data.TypedTableBase<Event_StatusRow> {
            
//            private global::System.Data.DataColumn columnID;
            
//            private global::System.Data.DataColumn columnTitle;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public Event_StatusDataTable() {
//                this.TableName = "Event_Status";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal Event_StatusDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected Event_StatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDColumn {
//                get {
//                    return this.columnID;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn TitleColumn {
//                get {
//                    return this.columnTitle;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public Event_StatusRow this[int index] {
//                get {
//                    return ((Event_StatusRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event Event_StatusRowChangeEventHandler Event_StatusRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event Event_StatusRowChangeEventHandler Event_StatusRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event Event_StatusRowChangeEventHandler Event_StatusRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event Event_StatusRowChangeEventHandler Event_StatusRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void AddEvent_StatusRow(Event_StatusRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public Event_StatusRow AddEvent_StatusRow(int ID, string Title) {
//                Event_StatusRow rowEvent_StatusRow = ((Event_StatusRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        ID,
//                        Title};
//                rowEvent_StatusRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowEvent_StatusRow);
//                return rowEvent_StatusRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public Event_StatusRow FindByID(int ID) {
//                return ((Event_StatusRow)(this.Rows.Find(new object[] {
//                            ID})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                Event_StatusDataTable cln = ((Event_StatusDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new Event_StatusDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal void InitVars() {
//                this.columnID = base.Columns["ID"];
//                this.columnTitle = base.Columns["Title"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            private void InitClass() {
//                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnID);
//                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnTitle);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnID}, true));
//                this.columnID.AllowDBNull = false;
//                this.columnID.Unique = true;
//                this.columnTitle.AllowDBNull = false;
//                this.columnTitle.MaxLength = 64;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public Event_StatusRow NewEvent_StatusRow() {
//                return ((Event_StatusRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new Event_StatusRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(Event_StatusRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.Event_StatusRowChanged != null)) {
//                    this.Event_StatusRowChanged(this, new Event_StatusRowChangeEvent(((Event_StatusRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.Event_StatusRowChanging != null)) {
//                    this.Event_StatusRowChanging(this, new Event_StatusRowChangeEvent(((Event_StatusRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.Event_StatusRowDeleted != null)) {
//                    this.Event_StatusRowDeleted(this, new Event_StatusRowChangeEvent(((Event_StatusRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.Event_StatusRowDeleting != null)) {
//                    this.Event_StatusRowDeleting(this, new Event_StatusRowChangeEvent(((Event_StatusRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void RemoveEvent_StatusRow(Event_StatusRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                BiletsDataSet ds = new BiletsDataSet();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "Event_StatusDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class EventsDataTable : global::System.Data.TypedTableBase<EventsRow> {
            
//            private global::System.Data.DataColumn columnID;
            
//            private global::System.Data.DataColumn columnName;
            
//            private global::System.Data.DataColumn columnIDStatus;
            
//            private global::System.Data.DataColumn columnSoldTickets;
            
//            private global::System.Data.DataColumn columnVolumeTickets;
            
//            private global::System.Data.DataColumn columnOrganization;
            
//            private global::System.Data.DataColumn columnIDUser;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public EventsDataTable() {
//                this.TableName = "Events";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal EventsDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected EventsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDColumn {
//                get {
//                    return this.columnID;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn NameColumn {
//                get {
//                    return this.columnName;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDStatusColumn {
//                get {
//                    return this.columnIDStatus;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn SoldTicketsColumn {
//                get {
//                    return this.columnSoldTickets;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn VolumeTicketsColumn {
//                get {
//                    return this.columnVolumeTickets;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn OrganizationColumn {
//                get {
//                    return this.columnOrganization;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDUserColumn {
//                get {
//                    return this.columnIDUser;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public EventsRow this[int index] {
//                get {
//                    return ((EventsRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event EventsRowChangeEventHandler EventsRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event EventsRowChangeEventHandler EventsRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event EventsRowChangeEventHandler EventsRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event EventsRowChangeEventHandler EventsRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void AddEventsRow(EventsRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public EventsRow AddEventsRow(int ID, string Name, Event_StatusRow parentEvent_StatusRowByFK_Events_Event_Status, int SoldTickets, int VolumeTickets, string Organization, UsersRow parentUsersRowByFK_Events_Users) {
//                EventsRow rowEventsRow = ((EventsRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        ID,
//                        Name,
//                        null,
//                        SoldTickets,
//                        VolumeTickets,
//                        Organization,
//                        null};
//                if ((parentEvent_StatusRowByFK_Events_Event_Status != null)) {
//                    columnValuesArray[2] = parentEvent_StatusRowByFK_Events_Event_Status[0];
//                }
//                if ((parentUsersRowByFK_Events_Users != null)) {
//                    columnValuesArray[6] = parentUsersRowByFK_Events_Users[0];
//                }
//                rowEventsRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowEventsRow);
//                return rowEventsRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public EventsRow FindByID(int ID) {
//                return ((EventsRow)(this.Rows.Find(new object[] {
//                            ID})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                EventsDataTable cln = ((EventsDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new EventsDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal void InitVars() {
//                this.columnID = base.Columns["ID"];
//                this.columnName = base.Columns["Name"];
//                this.columnIDStatus = base.Columns["IDStatus"];
//                this.columnSoldTickets = base.Columns["SoldTickets"];
//                this.columnVolumeTickets = base.Columns["VolumeTickets"];
//                this.columnOrganization = base.Columns["Organization"];
//                this.columnIDUser = base.Columns["IDUser"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            private void InitClass() {
//                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnID);
//                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnName);
//                this.columnIDStatus = new global::System.Data.DataColumn("IDStatus", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnIDStatus);
//                this.columnSoldTickets = new global::System.Data.DataColumn("SoldTickets", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnSoldTickets);
//                this.columnVolumeTickets = new global::System.Data.DataColumn("VolumeTickets", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnVolumeTickets);
//                this.columnOrganization = new global::System.Data.DataColumn("Organization", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnOrganization);
//                this.columnIDUser = new global::System.Data.DataColumn("IDUser", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnIDUser);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnID}, true));
//                this.columnID.AllowDBNull = false;
//                this.columnID.Unique = true;
//                this.columnName.AllowDBNull = false;
//                this.columnName.MaxLength = 50;
//                this.columnIDStatus.AllowDBNull = false;
//                this.columnSoldTickets.AllowDBNull = false;
//                this.columnVolumeTickets.AllowDBNull = false;
//                this.columnOrganization.AllowDBNull = false;
//                this.columnOrganization.MaxLength = 50;
//                this.columnIDUser.AllowDBNull = false;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public EventsRow NewEventsRow() {
//                return ((EventsRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new EventsRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(EventsRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.EventsRowChanged != null)) {
//                    this.EventsRowChanged(this, new EventsRowChangeEvent(((EventsRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.EventsRowChanging != null)) {
//                    this.EventsRowChanging(this, new EventsRowChangeEvent(((EventsRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.EventsRowDeleted != null)) {
//                    this.EventsRowDeleted(this, new EventsRowChangeEvent(((EventsRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.EventsRowDeleting != null)) {
//                    this.EventsRowDeleting(this, new EventsRowChangeEvent(((EventsRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void RemoveEventsRow(EventsRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                BiletsDataSet ds = new BiletsDataSet();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "EventsDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class HallDataTable : global::System.Data.TypedTableBase<HallRow> {
            
//            private global::System.Data.DataColumn columnID;
            
//            private global::System.Data.DataColumn columnCountSeats;
            
//            private global::System.Data.DataColumn columnIDSector;
            
//            private global::System.Data.DataColumn columnCapacity;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public HallDataTable() {
//                this.TableName = "Hall";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal HallDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected HallDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDColumn {
//                get {
//                    return this.columnID;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn CountSeatsColumn {
//                get {
//                    return this.columnCountSeats;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDSectorColumn {
//                get {
//                    return this.columnIDSector;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn CapacityColumn {
//                get {
//                    return this.columnCapacity;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public HallRow this[int index] {
//                get {
//                    return ((HallRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event HallRowChangeEventHandler HallRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event HallRowChangeEventHandler HallRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event HallRowChangeEventHandler HallRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event HallRowChangeEventHandler HallRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void AddHallRow(HallRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public HallRow AddHallRow(int ID, int CountSeats, SectorRow parentSectorRowByFK_Hall_Sector, int Capacity) {
//                HallRow rowHallRow = ((HallRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        ID,
//                        CountSeats,
//                        null,
//                        Capacity};
//                if ((parentSectorRowByFK_Hall_Sector != null)) {
//                    columnValuesArray[2] = parentSectorRowByFK_Hall_Sector[0];
//                }
//                rowHallRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowHallRow);
//                return rowHallRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public HallRow FindByID(int ID) {
//                return ((HallRow)(this.Rows.Find(new object[] {
//                            ID})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                HallDataTable cln = ((HallDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new HallDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal void InitVars() {
//                this.columnID = base.Columns["ID"];
//                this.columnCountSeats = base.Columns["CountSeats"];
//                this.columnIDSector = base.Columns["IDSector"];
//                this.columnCapacity = base.Columns["Capacity"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            private void InitClass() {
//                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnID);
//                this.columnCountSeats = new global::System.Data.DataColumn("CountSeats", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnCountSeats);
//                this.columnIDSector = new global::System.Data.DataColumn("IDSector", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnIDSector);
//                this.columnCapacity = new global::System.Data.DataColumn("Capacity", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnCapacity);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnID}, true));
//                this.columnID.AllowDBNull = false;
//                this.columnID.Unique = true;
//                this.columnCountSeats.AllowDBNull = false;
//                this.columnIDSector.AllowDBNull = false;
//                this.columnCapacity.AllowDBNull = false;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public HallRow NewHallRow() {
//                return ((HallRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new HallRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(HallRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.HallRowChanged != null)) {
//                    this.HallRowChanged(this, new HallRowChangeEvent(((HallRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.HallRowChanging != null)) {
//                    this.HallRowChanging(this, new HallRowChangeEvent(((HallRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.HallRowDeleted != null)) {
//                    this.HallRowDeleted(this, new HallRowChangeEvent(((HallRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.HallRowDeleting != null)) {
//                    this.HallRowDeleting(this, new HallRowChangeEvent(((HallRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void RemoveHallRow(HallRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                BiletsDataSet ds = new BiletsDataSet();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "HallDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class LogingDataTable : global::System.Data.TypedTableBase<LogingRow> {
            
//            private global::System.Data.DataColumn columnID;
            
//            private global::System.Data.DataColumn columnTime;
            
//            private global::System.Data.DataColumn columnAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public LogingDataTable() {
//                this.TableName = "Loging";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal LogingDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected LogingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDColumn {
//                get {
//                    return this.columnID;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn TimeColumn {
//                get {
//                    return this.columnTime;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn ActionColumn {
//                get {
//                    return this.columnAction;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public LogingRow this[int index] {
//                get {
//                    return ((LogingRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event LogingRowChangeEventHandler LogingRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event LogingRowChangeEventHandler LogingRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event LogingRowChangeEventHandler LogingRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event LogingRowChangeEventHandler LogingRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void AddLogingRow(LogingRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public LogingRow AddLogingRow(int ID, System.DateTime Time, string Action) {
//                LogingRow rowLogingRow = ((LogingRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        ID,
//                        Time,
//                        Action};
//                rowLogingRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowLogingRow);
//                return rowLogingRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public LogingRow FindByID(int ID) {
//                return ((LogingRow)(this.Rows.Find(new object[] {
//                            ID})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                LogingDataTable cln = ((LogingDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new LogingDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal void InitVars() {
//                this.columnID = base.Columns["ID"];
//                this.columnTime = base.Columns["Time"];
//                this.columnAction = base.Columns["Action"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            private void InitClass() {
//                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnID);
//                this.columnTime = new global::System.Data.DataColumn("Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnTime);
//                this.columnAction = new global::System.Data.DataColumn("Action", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnAction);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnID}, true));
//                this.columnID.AllowDBNull = false;
//                this.columnID.Unique = true;
//                this.columnTime.AllowDBNull = false;
//                this.columnAction.MaxLength = 2147483647;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public LogingRow NewLogingRow() {
//                return ((LogingRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new LogingRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(LogingRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.LogingRowChanged != null)) {
//                    this.LogingRowChanged(this, new LogingRowChangeEvent(((LogingRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.LogingRowChanging != null)) {
//                    this.LogingRowChanging(this, new LogingRowChangeEvent(((LogingRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.LogingRowDeleted != null)) {
//                    this.LogingRowDeleted(this, new LogingRowChangeEvent(((LogingRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.LogingRowDeleting != null)) {
//                    this.LogingRowDeleting(this, new LogingRowChangeEvent(((LogingRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void RemoveLogingRow(LogingRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                BiletsDataSet ds = new BiletsDataSet();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "LogingDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class PlaceDataTable : global::System.Data.TypedTableBase<PlaceRow> {
            
//            private global::System.Data.DataColumn columnID;
            
//            private global::System.Data.DataColumn columnTitle;
            
//            private global::System.Data.DataColumn columnCity;
            
//            private global::System.Data.DataColumn columnAddress;
            
//            private global::System.Data.DataColumn columnCapacity;
            
//            private global::System.Data.DataColumn columnIDHall;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public PlaceDataTable() {
//                this.TableName = "Place";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal PlaceDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected PlaceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDColumn {
//                get {
//                    return this.columnID;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn TitleColumn {
//                get {
//                    return this.columnTitle;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn CityColumn {
//                get {
//                    return this.columnCity;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn AddressColumn {
//                get {
//                    return this.columnAddress;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn CapacityColumn {
//                get {
//                    return this.columnCapacity;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDHallColumn {
//                get {
//                    return this.columnIDHall;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public PlaceRow this[int index] {
//                get {
//                    return ((PlaceRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event PlaceRowChangeEventHandler PlaceRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event PlaceRowChangeEventHandler PlaceRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event PlaceRowChangeEventHandler PlaceRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event PlaceRowChangeEventHandler PlaceRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void AddPlaceRow(PlaceRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public PlaceRow AddPlaceRow(int ID, string Title, string City, string Address, int Capacity, HallRow parentHallRowByFK_Place_Hall) {
//                PlaceRow rowPlaceRow = ((PlaceRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        ID,
//                        Title,
//                        City,
//                        Address,
//                        Capacity,
//                        null};
//                if ((parentHallRowByFK_Place_Hall != null)) {
//                    columnValuesArray[5] = parentHallRowByFK_Place_Hall[0];
//                }
//                rowPlaceRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowPlaceRow);
//                return rowPlaceRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public PlaceRow FindByID(int ID) {
//                return ((PlaceRow)(this.Rows.Find(new object[] {
//                            ID})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                PlaceDataTable cln = ((PlaceDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new PlaceDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal void InitVars() {
//                this.columnID = base.Columns["ID"];
//                this.columnTitle = base.Columns["Title"];
//                this.columnCity = base.Columns["City"];
//                this.columnAddress = base.Columns["Address"];
//                this.columnCapacity = base.Columns["Capacity"];
//                this.columnIDHall = base.Columns["IDHall"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            private void InitClass() {
//                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnID);
//                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnTitle);
//                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnCity);
//                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnAddress);
//                this.columnCapacity = new global::System.Data.DataColumn("Capacity", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnCapacity);
//                this.columnIDHall = new global::System.Data.DataColumn("IDHall", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnIDHall);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnID}, true));
//                this.columnID.AllowDBNull = false;
//                this.columnID.Unique = true;
//                this.columnTitle.AllowDBNull = false;
//                this.columnTitle.MaxLength = 50;
//                this.columnCity.AllowDBNull = false;
//                this.columnCity.MaxLength = 50;
//                this.columnAddress.AllowDBNull = false;
//                this.columnAddress.MaxLength = 150;
//                this.columnCapacity.AllowDBNull = false;
//                this.columnIDHall.AllowDBNull = false;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public PlaceRow NewPlaceRow() {
//                return ((PlaceRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new PlaceRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(PlaceRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.PlaceRowChanged != null)) {
//                    this.PlaceRowChanged(this, new PlaceRowChangeEvent(((PlaceRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.PlaceRowChanging != null)) {
//                    this.PlaceRowChanging(this, new PlaceRowChangeEvent(((PlaceRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.PlaceRowDeleted != null)) {
//                    this.PlaceRowDeleted(this, new PlaceRowChangeEvent(((PlaceRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.PlaceRowDeleting != null)) {
//                    this.PlaceRowDeleting(this, new PlaceRowChangeEvent(((PlaceRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void RemovePlaceRow(PlaceRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                BiletsDataSet ds = new BiletsDataSet();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "PlaceDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class RoleDataTable : global::System.Data.TypedTableBase<RoleRow> {
            
//            private global::System.Data.DataColumn columnID;
            
//            private global::System.Data.DataColumn columnTitle;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public RoleDataTable() {
//                this.TableName = "Role";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal RoleDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected RoleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDColumn {
//                get {
//                    return this.columnID;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn TitleColumn {
//                get {
//                    return this.columnTitle;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public RoleRow this[int index] {
//                get {
//                    return ((RoleRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event RoleRowChangeEventHandler RoleRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event RoleRowChangeEventHandler RoleRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event RoleRowChangeEventHandler RoleRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event RoleRowChangeEventHandler RoleRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void AddRoleRow(RoleRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public RoleRow AddRoleRow(int ID, string Title) {
//                RoleRow rowRoleRow = ((RoleRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        ID,
//                        Title};
//                rowRoleRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowRoleRow);
//                return rowRoleRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public RoleRow FindByID(int ID) {
//                return ((RoleRow)(this.Rows.Find(new object[] {
//                            ID})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                RoleDataTable cln = ((RoleDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new RoleDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal void InitVars() {
//                this.columnID = base.Columns["ID"];
//                this.columnTitle = base.Columns["Title"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            private void InitClass() {
//                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnID);
//                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnTitle);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnID}, true));
//                this.columnID.AllowDBNull = false;
//                this.columnID.Unique = true;
//                this.columnTitle.AllowDBNull = false;
//                this.columnTitle.MaxLength = 50;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public RoleRow NewRoleRow() {
//                return ((RoleRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new RoleRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(RoleRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.RoleRowChanged != null)) {
//                    this.RoleRowChanged(this, new RoleRowChangeEvent(((RoleRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.RoleRowChanging != null)) {
//                    this.RoleRowChanging(this, new RoleRowChangeEvent(((RoleRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.RoleRowDeleted != null)) {
//                    this.RoleRowDeleted(this, new RoleRowChangeEvent(((RoleRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.RoleRowDeleting != null)) {
//                    this.RoleRowDeleting(this, new RoleRowChangeEvent(((RoleRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void RemoveRoleRow(RoleRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                BiletsDataSet ds = new BiletsDataSet();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "RoleDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class SeatDataTable : global::System.Data.TypedTableBase<SeatRow> {
            
//            private global::System.Data.DataColumn columnID;
            
//            private global::System.Data.DataColumn columnRow;
            
//            private global::System.Data.DataColumn columnNumber;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public SeatDataTable() {
//                this.TableName = "Seat";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal SeatDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected SeatDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDColumn {
//                get {
//                    return this.columnID;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn RowColumn {
//                get {
//                    return this.columnRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn NumberColumn {
//                get {
//                    return this.columnNumber;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public SeatRow this[int index] {
//                get {
//                    return ((SeatRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event SeatRowChangeEventHandler SeatRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event SeatRowChangeEventHandler SeatRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event SeatRowChangeEventHandler SeatRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event SeatRowChangeEventHandler SeatRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void AddSeatRow(SeatRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public SeatRow AddSeatRow(int ID, int Row, int Number) {
//                SeatRow rowSeatRow = ((SeatRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        ID,
//                        Row,
//                        Number};
//                rowSeatRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowSeatRow);
//                return rowSeatRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public SeatRow FindByID(int ID) {
//                return ((SeatRow)(this.Rows.Find(new object[] {
//                            ID})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                SeatDataTable cln = ((SeatDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new SeatDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal void InitVars() {
//                this.columnID = base.Columns["ID"];
//                this.columnRow = base.Columns["Row"];
//                this.columnNumber = base.Columns["Number"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            private void InitClass() {
//                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnID);
//                this.columnRow = new global::System.Data.DataColumn("Row", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnRow);
//                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnNumber);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnID}, true));
//                this.columnID.AllowDBNull = false;
//                this.columnID.Unique = true;
//                this.columnRow.AllowDBNull = false;
//                this.columnNumber.AllowDBNull = false;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public SeatRow NewSeatRow() {
//                return ((SeatRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new SeatRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(SeatRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.SeatRowChanged != null)) {
//                    this.SeatRowChanged(this, new SeatRowChangeEvent(((SeatRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.SeatRowChanging != null)) {
//                    this.SeatRowChanging(this, new SeatRowChangeEvent(((SeatRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.SeatRowDeleted != null)) {
//                    this.SeatRowDeleted(this, new SeatRowChangeEvent(((SeatRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.SeatRowDeleting != null)) {
//                    this.SeatRowDeleting(this, new SeatRowChangeEvent(((SeatRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void RemoveSeatRow(SeatRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                BiletsDataSet ds = new BiletsDataSet();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "SeatDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class SectorDataTable : global::System.Data.TypedTableBase<SectorRow> {
            
//            private global::System.Data.DataColumn columnID;
            
//            private global::System.Data.DataColumn columnType;
            
//            private global::System.Data.DataColumn columnIDSeat;
            
//            private global::System.Data.DataColumn columnCountSeats;
            
//            private global::System.Data.DataColumn columnCapacity;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public SectorDataTable() {
//                this.TableName = "Sector";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal SectorDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected SectorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDColumn {
//                get {
//                    return this.columnID;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn TypeColumn {
//                get {
//                    return this.columnType;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDSeatColumn {
//                get {
//                    return this.columnIDSeat;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn CountSeatsColumn {
//                get {
//                    return this.columnCountSeats;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn CapacityColumn {
//                get {
//                    return this.columnCapacity;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public SectorRow this[int index] {
//                get {
//                    return ((SectorRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event SectorRowChangeEventHandler SectorRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event SectorRowChangeEventHandler SectorRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event SectorRowChangeEventHandler SectorRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event SectorRowChangeEventHandler SectorRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void AddSectorRow(SectorRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public SectorRow AddSectorRow(int ID, string Type, SeatRow parentSeatRowByFK_Sector_Seat, int CountSeats, int Capacity) {
//                SectorRow rowSectorRow = ((SectorRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        ID,
//                        Type,
//                        null,
//                        CountSeats,
//                        Capacity};
//                if ((parentSeatRowByFK_Sector_Seat != null)) {
//                    columnValuesArray[2] = parentSeatRowByFK_Sector_Seat[0];
//                }
//                rowSectorRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowSectorRow);
//                return rowSectorRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public SectorRow FindByID(int ID) {
//                return ((SectorRow)(this.Rows.Find(new object[] {
//                            ID})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                SectorDataTable cln = ((SectorDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new SectorDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal void InitVars() {
//                this.columnID = base.Columns["ID"];
//                this.columnType = base.Columns["Type"];
//                this.columnIDSeat = base.Columns["IDSeat"];
//                this.columnCountSeats = base.Columns["CountSeats"];
//                this.columnCapacity = base.Columns["Capacity"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            private void InitClass() {
//                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnID);
//                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnType);
//                this.columnIDSeat = new global::System.Data.DataColumn("IDSeat", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnIDSeat);
//                this.columnCountSeats = new global::System.Data.DataColumn("CountSeats", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnCountSeats);
//                this.columnCapacity = new global::System.Data.DataColumn("Capacity", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnCapacity);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnID}, true));
//                this.columnID.AllowDBNull = false;
//                this.columnID.Unique = true;
//                this.columnType.AllowDBNull = false;
//                this.columnType.MaxLength = 50;
//                this.columnIDSeat.AllowDBNull = false;
//                this.columnCountSeats.AllowDBNull = false;
//                this.columnCapacity.AllowDBNull = false;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public SectorRow NewSectorRow() {
//                return ((SectorRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new SectorRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(SectorRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.SectorRowChanged != null)) {
//                    this.SectorRowChanged(this, new SectorRowChangeEvent(((SectorRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.SectorRowChanging != null)) {
//                    this.SectorRowChanging(this, new SectorRowChangeEvent(((SectorRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.SectorRowDeleted != null)) {
//                    this.SectorRowDeleted(this, new SectorRowChangeEvent(((SectorRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.SectorRowDeleting != null)) {
//                    this.SectorRowDeleting(this, new SectorRowChangeEvent(((SectorRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void RemoveSectorRow(SectorRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                BiletsDataSet ds = new BiletsDataSet();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "SectorDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class TicketsDataTable : global::System.Data.TypedTableBase<TicketsRow> {
            
//            private global::System.Data.DataColumn columnID;
            
//            private global::System.Data.DataColumn columnIDType;
            
//            private global::System.Data.DataColumn columnIDPlace;
            
//            private global::System.Data.DataColumn columnIDEvent;
            
//            private global::System.Data.DataColumn columnQRPhoto;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public TicketsDataTable() {
//                this.TableName = "Tickets";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal TicketsDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected TicketsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDColumn {
//                get {
//                    return this.columnID;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDTypeColumn {
//                get {
//                    return this.columnIDType;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDPlaceColumn {
//                get {
//                    return this.columnIDPlace;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDEventColumn {
//                get {
//                    return this.columnIDEvent;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn QRPhotoColumn {
//                get {
//                    return this.columnQRPhoto;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public TicketsRow this[int index] {
//                get {
//                    return ((TicketsRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event TicketsRowChangeEventHandler TicketsRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event TicketsRowChangeEventHandler TicketsRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event TicketsRowChangeEventHandler TicketsRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event TicketsRowChangeEventHandler TicketsRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void AddTicketsRow(TicketsRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public TicketsRow AddTicketsRow(int ID, TicketTypeRow parentTicketTypeRowByFK_Tickets_TicketType, PlaceRow parentPlaceRowByFK_Tickets_Place, EventsRow parentEventsRowByFK_Tickets_Events, byte[] QRPhoto) {
//                TicketsRow rowTicketsRow = ((TicketsRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        ID,
//                        null,
//                        null,
//                        null,
//                        QRPhoto};
//                if ((parentTicketTypeRowByFK_Tickets_TicketType != null)) {
//                    columnValuesArray[1] = parentTicketTypeRowByFK_Tickets_TicketType[0];
//                }
//                if ((parentPlaceRowByFK_Tickets_Place != null)) {
//                    columnValuesArray[2] = parentPlaceRowByFK_Tickets_Place[0];
//                }
//                if ((parentEventsRowByFK_Tickets_Events != null)) {
//                    columnValuesArray[3] = parentEventsRowByFK_Tickets_Events[0];
//                }
//                rowTicketsRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowTicketsRow);
//                return rowTicketsRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public TicketsRow FindByID(int ID) {
//                return ((TicketsRow)(this.Rows.Find(new object[] {
//                            ID})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                TicketsDataTable cln = ((TicketsDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new TicketsDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal void InitVars() {
//                this.columnID = base.Columns["ID"];
//                this.columnIDType = base.Columns["IDType"];
//                this.columnIDPlace = base.Columns["IDPlace"];
//                this.columnIDEvent = base.Columns["IDEvent"];
//                this.columnQRPhoto = base.Columns["QRPhoto"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            private void InitClass() {
//                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnID);
//                this.columnIDType = new global::System.Data.DataColumn("IDType", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnIDType);
//                this.columnIDPlace = new global::System.Data.DataColumn("IDPlace", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnIDPlace);
//                this.columnIDEvent = new global::System.Data.DataColumn("IDEvent", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnIDEvent);
//                this.columnQRPhoto = new global::System.Data.DataColumn("QRPhoto", typeof(byte[]), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnQRPhoto);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnID}, true));
//                this.columnID.AllowDBNull = false;
//                this.columnID.Unique = true;
//                this.columnIDType.AllowDBNull = false;
//                this.columnIDPlace.AllowDBNull = false;
//                this.columnIDEvent.AllowDBNull = false;
//                this.columnQRPhoto.AllowDBNull = false;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public TicketsRow NewTicketsRow() {
//                return ((TicketsRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new TicketsRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(TicketsRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.TicketsRowChanged != null)) {
//                    this.TicketsRowChanged(this, new TicketsRowChangeEvent(((TicketsRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.TicketsRowChanging != null)) {
//                    this.TicketsRowChanging(this, new TicketsRowChangeEvent(((TicketsRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.TicketsRowDeleted != null)) {
//                    this.TicketsRowDeleted(this, new TicketsRowChangeEvent(((TicketsRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.TicketsRowDeleting != null)) {
//                    this.TicketsRowDeleting(this, new TicketsRowChangeEvent(((TicketsRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void RemoveTicketsRow(TicketsRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                BiletsDataSet ds = new BiletsDataSet();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "TicketsDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class TicketTypeDataTable : global::System.Data.TypedTableBase<TicketTypeRow> {
            
//            private global::System.Data.DataColumn columnID;
            
//            private global::System.Data.DataColumn columnTitle;
            
//            private global::System.Data.DataColumn columnPrice;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public TicketTypeDataTable() {
//                this.TableName = "TicketType";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal TicketTypeDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected TicketTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDColumn {
//                get {
//                    return this.columnID;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn TitleColumn {
//                get {
//                    return this.columnTitle;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn PriceColumn {
//                get {
//                    return this.columnPrice;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public TicketTypeRow this[int index] {
//                get {
//                    return ((TicketTypeRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event TicketTypeRowChangeEventHandler TicketTypeRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event TicketTypeRowChangeEventHandler TicketTypeRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event TicketTypeRowChangeEventHandler TicketTypeRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event TicketTypeRowChangeEventHandler TicketTypeRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void AddTicketTypeRow(TicketTypeRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public TicketTypeRow AddTicketTypeRow(int ID, string Title, decimal Price) {
//                TicketTypeRow rowTicketTypeRow = ((TicketTypeRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        ID,
//                        Title,
//                        Price};
//                rowTicketTypeRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowTicketTypeRow);
//                return rowTicketTypeRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public TicketTypeRow FindByID(int ID) {
//                return ((TicketTypeRow)(this.Rows.Find(new object[] {
//                            ID})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                TicketTypeDataTable cln = ((TicketTypeDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new TicketTypeDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal void InitVars() {
//                this.columnID = base.Columns["ID"];
//                this.columnTitle = base.Columns["Title"];
//                this.columnPrice = base.Columns["Price"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            private void InitClass() {
//                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnID);
//                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnTitle);
//                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(decimal), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnPrice);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnID}, true));
//                this.columnID.AllowDBNull = false;
//                this.columnID.Unique = true;
//                this.columnTitle.AllowDBNull = false;
//                this.columnTitle.MaxLength = 50;
//                this.columnPrice.AllowDBNull = false;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public TicketTypeRow NewTicketTypeRow() {
//                return ((TicketTypeRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new TicketTypeRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(TicketTypeRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.TicketTypeRowChanged != null)) {
//                    this.TicketTypeRowChanged(this, new TicketTypeRowChangeEvent(((TicketTypeRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.TicketTypeRowChanging != null)) {
//                    this.TicketTypeRowChanging(this, new TicketTypeRowChangeEvent(((TicketTypeRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.TicketTypeRowDeleted != null)) {
//                    this.TicketTypeRowDeleted(this, new TicketTypeRowChangeEvent(((TicketTypeRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.TicketTypeRowDeleting != null)) {
//                    this.TicketTypeRowDeleting(this, new TicketTypeRowChangeEvent(((TicketTypeRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void RemoveTicketTypeRow(TicketTypeRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                BiletsDataSet ds = new BiletsDataSet();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "TicketTypeDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class UsersDataTable : global::System.Data.TypedTableBase<UsersRow> {
            
//            private global::System.Data.DataColumn columnID;
            
//            private global::System.Data.DataColumn columnLogin;
            
//            private global::System.Data.DataColumn columnPassword;
            
//            private global::System.Data.DataColumn columnIDRole;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public UsersDataTable() {
//                this.TableName = "Users";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal UsersDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected UsersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDColumn {
//                get {
//                    return this.columnID;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn LoginColumn {
//                get {
//                    return this.columnLogin;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn PasswordColumn {
//                get {
//                    return this.columnPassword;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDRoleColumn {
//                get {
//                    return this.columnIDRole;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public UsersRow this[int index] {
//                get {
//                    return ((UsersRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event UsersRowChangeEventHandler UsersRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event UsersRowChangeEventHandler UsersRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event UsersRowChangeEventHandler UsersRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event UsersRowChangeEventHandler UsersRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void AddUsersRow(UsersRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public UsersRow AddUsersRow(int ID, string Login, string Password, RoleRow parentRoleRowByFK_Users_Role) {
//                UsersRow rowUsersRow = ((UsersRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        ID,
//                        Login,
//                        Password,
//                        null};
//                if ((parentRoleRowByFK_Users_Role != null)) {
//                    columnValuesArray[3] = parentRoleRowByFK_Users_Role[0];
//                }
//                rowUsersRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowUsersRow);
//                return rowUsersRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public UsersRow FindByID(int ID) {
//                return ((UsersRow)(this.Rows.Find(new object[] {
//                            ID})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                UsersDataTable cln = ((UsersDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new UsersDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal void InitVars() {
//                this.columnID = base.Columns["ID"];
//                this.columnLogin = base.Columns["Login"];
//                this.columnPassword = base.Columns["Password"];
//                this.columnIDRole = base.Columns["IDRole"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            private void InitClass() {
//                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnID);
//                this.columnLogin = new global::System.Data.DataColumn("Login", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnLogin);
//                this.columnPassword = new global::System.Data.DataColumn("Password", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnPassword);
//                this.columnIDRole = new global::System.Data.DataColumn("IDRole", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnIDRole);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnID}, true));
//                this.columnID.AllowDBNull = false;
//                this.columnID.Unique = true;
//                this.columnLogin.AllowDBNull = false;
//                this.columnLogin.MaxLength = 80;
//                this.columnPassword.AllowDBNull = false;
//                this.columnPassword.MaxLength = 50;
//                this.columnIDRole.AllowDBNull = false;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public UsersRow NewUsersRow() {
//                return ((UsersRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new UsersRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(UsersRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.UsersRowChanged != null)) {
//                    this.UsersRowChanged(this, new UsersRowChangeEvent(((UsersRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.UsersRowChanging != null)) {
//                    this.UsersRowChanging(this, new UsersRowChangeEvent(((UsersRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.UsersRowDeleted != null)) {
//                    this.UsersRowDeleted(this, new UsersRowChangeEvent(((UsersRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.UsersRowDeleting != null)) {
//                    this.UsersRowDeleting(this, new UsersRowChangeEvent(((UsersRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void RemoveUsersRow(UsersRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                BiletsDataSet ds = new BiletsDataSet();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "UsersDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents the strongly named DataTable class.
//        ///</summary>
//        [global::System.Serializable()]
//        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
//        public partial class VisitorsDataTable : global::System.Data.TypedTableBase<VisitorsRow> {
            
//            private global::System.Data.DataColumn columnID;
            
//            private global::System.Data.DataColumn columnName;
            
//            private global::System.Data.DataColumn columnSurname;
            
//            private global::System.Data.DataColumn columnPhone;
            
//            private global::System.Data.DataColumn columnIDTicket;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public VisitorsDataTable() {
//                this.TableName = "Visitors";
//                this.BeginInit();
//                this.InitClass();
//                this.EndInit();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal VisitorsDataTable(global::System.Data.DataTable table) {
//                this.TableName = table.TableName;
//                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
//                    this.CaseSensitive = table.CaseSensitive;
//                }
//                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
//                    this.Locale = table.Locale;
//                }
//                if ((table.Namespace != table.DataSet.Namespace)) {
//                    this.Namespace = table.Namespace;
//                }
//                this.Prefix = table.Prefix;
//                this.MinimumCapacity = table.MinimumCapacity;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected VisitorsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
//                    base(info, context) {
//                this.InitVars();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDColumn {
//                get {
//                    return this.columnID;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn NameColumn {
//                get {
//                    return this.columnName;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn SurnameColumn {
//                get {
//                    return this.columnSurname;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn PhoneColumn {
//                get {
//                    return this.columnPhone;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataColumn IDTicketColumn {
//                get {
//                    return this.columnIDTicket;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            [global::System.ComponentModel.Browsable(false)]
//            public int Count {
//                get {
//                    return this.Rows.Count;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public VisitorsRow this[int index] {
//                get {
//                    return ((VisitorsRow)(this.Rows[index]));
//                }
//            }
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event VisitorsRowChangeEventHandler VisitorsRowChanging;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event VisitorsRowChangeEventHandler VisitorsRowChanged;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event VisitorsRowChangeEventHandler VisitorsRowDeleting;
            
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public event VisitorsRowChangeEventHandler VisitorsRowDeleted;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void AddVisitorsRow(VisitorsRow row) {
//                this.Rows.Add(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public VisitorsRow AddVisitorsRow(int ID, string Name, string Surname, string Phone, TicketsRow parentTicketsRowByFK_Visitors_Tickets) {
//                VisitorsRow rowVisitorsRow = ((VisitorsRow)(this.NewRow()));
//                object[] columnValuesArray = new object[] {
//                        ID,
//                        Name,
//                        Surname,
//                        Phone,
//                        null};
//                if ((parentTicketsRowByFK_Visitors_Tickets != null)) {
//                    columnValuesArray[4] = parentTicketsRowByFK_Visitors_Tickets[0];
//                }
//                rowVisitorsRow.ItemArray = columnValuesArray;
//                this.Rows.Add(rowVisitorsRow);
//                return rowVisitorsRow;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public VisitorsRow FindByID(int ID) {
//                return ((VisitorsRow)(this.Rows.Find(new object[] {
//                            ID})));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public override global::System.Data.DataTable Clone() {
//                VisitorsDataTable cln = ((VisitorsDataTable)(base.Clone()));
//                cln.InitVars();
//                return cln;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataTable CreateInstance() {
//                return new VisitorsDataTable();
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal void InitVars() {
//                this.columnID = base.Columns["ID"];
//                this.columnName = base.Columns["Name"];
//                this.columnSurname = base.Columns["Surname"];
//                this.columnPhone = base.Columns["Phone"];
//                this.columnIDTicket = base.Columns["IDTicket"];
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            private void InitClass() {
//                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnID);
//                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnName);
//                this.columnSurname = new global::System.Data.DataColumn("Surname", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnSurname);
//                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnPhone);
//                this.columnIDTicket = new global::System.Data.DataColumn("IDTicket", typeof(int), null, global::System.Data.MappingType.Element);
//                base.Columns.Add(this.columnIDTicket);
//                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
//                                this.columnID}, true));
//                this.columnID.AllowDBNull = false;
//                this.columnID.Unique = true;
//                this.columnName.AllowDBNull = false;
//                this.columnName.MaxLength = 50;
//                this.columnSurname.AllowDBNull = false;
//                this.columnSurname.MaxLength = 50;
//                this.columnPhone.AllowDBNull = false;
//                this.columnPhone.MaxLength = 12;
//                this.columnIDTicket.AllowDBNull = false;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public VisitorsRow NewVisitorsRow() {
//                return ((VisitorsRow)(this.NewRow()));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
//                return new VisitorsRow(builder);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override global::System.Type GetRowType() {
//                return typeof(VisitorsRow);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanged(e);
//                if ((this.VisitorsRowChanged != null)) {
//                    this.VisitorsRowChanged(this, new VisitorsRowChangeEvent(((VisitorsRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowChanging(e);
//                if ((this.VisitorsRowChanging != null)) {
//                    this.VisitorsRowChanging(this, new VisitorsRowChangeEvent(((VisitorsRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleted(e);
//                if ((this.VisitorsRowDeleted != null)) {
//                    this.VisitorsRowDeleted(this, new VisitorsRowChangeEvent(((VisitorsRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
//                base.OnRowDeleting(e);
//                if ((this.VisitorsRowDeleting != null)) {
//                    this.VisitorsRowDeleting(this, new VisitorsRowChangeEvent(((VisitorsRow)(e.Row)), e.Action));
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void RemoveVisitorsRow(VisitorsRow row) {
//                this.Rows.Remove(row);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
//                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
//                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
//                BiletsDataSet ds = new BiletsDataSet();
//                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
//                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
//                any1.MinOccurs = new decimal(0);
//                any1.MaxOccurs = decimal.MaxValue;
//                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any1);
//                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
//                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
//                any2.MinOccurs = new decimal(1);
//                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
//                sequence.Items.Add(any2);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute1.Name = "namespace";
//                attribute1.FixedValue = ds.Namespace;
//                type.Attributes.Add(attribute1);
//                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
//                attribute2.Name = "tableTypeName";
//                attribute2.FixedValue = "VisitorsDataTable";
//                type.Attributes.Add(attribute2);
//                type.Particle = sequence;
//                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
//                if (xs.Contains(dsSchema.TargetNamespace)) {
//                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
//                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
//                    try {
//                        global::System.Xml.Schema.XmlSchema schema = null;
//                        dsSchema.Write(s1);
//                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
//                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
//                            s2.SetLength(0);
//                            schema.Write(s2);
//                            if ((s1.Length == s2.Length)) {
//                                s1.Position = 0;
//                                s2.Position = 0;
//                                for (; ((s1.Position != s1.Length) 
//                                            && (s1.ReadByte() == s2.ReadByte())); ) {
//                                    ;
//                                }
//                                if ((s1.Position == s1.Length)) {
//                                    return type;
//                                }
//                            }
//                        }
//                    }
//                    finally {
//                        if ((s1 != null)) {
//                            s1.Close();
//                        }
//                        if ((s2 != null)) {
//                            s2.Close();
//                        }
//                    }
//                }
//                xs.Add(dsSchema);
//                return type;
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class Event_StatusRow : global::System.Data.DataRow {
            
//            private Event_StatusDataTable tableEvent_Status;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal Event_StatusRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableEvent_Status = ((Event_StatusDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int ID {
//                get {
//                    return ((int)(this[this.tableEvent_Status.IDColumn]));
//                }
//                set {
//                    this[this.tableEvent_Status.IDColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public string Title {
//                get {
//                    return ((string)(this[this.tableEvent_Status.TitleColumn]));
//                }
//                set {
//                    this[this.tableEvent_Status.TitleColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public EventsRow[] GetEventsRows() {
//                if ((this.Table.ChildRelations["FK_Events_Event_Status"] == null)) {
//                    return new EventsRow[0];
//                }
//                else {
//                    return ((EventsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Events_Event_Status"])));
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class EventsRow : global::System.Data.DataRow {
            
//            private EventsDataTable tableEvents;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal EventsRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableEvents = ((EventsDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int ID {
//                get {
//                    return ((int)(this[this.tableEvents.IDColumn]));
//                }
//                set {
//                    this[this.tableEvents.IDColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public string Name {
//                get {
//                    return ((string)(this[this.tableEvents.NameColumn]));
//                }
//                set {
//                    this[this.tableEvents.NameColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int IDStatus {
//                get {
//                    return ((int)(this[this.tableEvents.IDStatusColumn]));
//                }
//                set {
//                    this[this.tableEvents.IDStatusColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int SoldTickets {
//                get {
//                    return ((int)(this[this.tableEvents.SoldTicketsColumn]));
//                }
//                set {
//                    this[this.tableEvents.SoldTicketsColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int VolumeTickets {
//                get {
//                    return ((int)(this[this.tableEvents.VolumeTicketsColumn]));
//                }
//                set {
//                    this[this.tableEvents.VolumeTicketsColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public string Organization {
//                get {
//                    return ((string)(this[this.tableEvents.OrganizationColumn]));
//                }
//                set {
//                    this[this.tableEvents.OrganizationColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int IDUser {
//                get {
//                    return ((int)(this[this.tableEvents.IDUserColumn]));
//                }
//                set {
//                    this[this.tableEvents.IDUserColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public Event_StatusRow Event_StatusRow {
//                get {
//                    return ((Event_StatusRow)(this.GetParentRow(this.Table.ParentRelations["FK_Events_Event_Status"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_Events_Event_Status"]);
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public UsersRow UsersRow {
//                get {
//                    return ((UsersRow)(this.GetParentRow(this.Table.ParentRelations["FK_Events_Users"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_Events_Users"]);
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public TicketsRow[] GetTicketsRows() {
//                if ((this.Table.ChildRelations["FK_Tickets_Events"] == null)) {
//                    return new TicketsRow[0];
//                }
//                else {
//                    return ((TicketsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Tickets_Events"])));
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class HallRow : global::System.Data.DataRow {
            
//            private HallDataTable tableHall;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal HallRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableHall = ((HallDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int ID {
//                get {
//                    return ((int)(this[this.tableHall.IDColumn]));
//                }
//                set {
//                    this[this.tableHall.IDColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int CountSeats {
//                get {
//                    return ((int)(this[this.tableHall.CountSeatsColumn]));
//                }
//                set {
//                    this[this.tableHall.CountSeatsColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int IDSector {
//                get {
//                    return ((int)(this[this.tableHall.IDSectorColumn]));
//                }
//                set {
//                    this[this.tableHall.IDSectorColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int Capacity {
//                get {
//                    return ((int)(this[this.tableHall.CapacityColumn]));
//                }
//                set {
//                    this[this.tableHall.CapacityColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public SectorRow SectorRow {
//                get {
//                    return ((SectorRow)(this.GetParentRow(this.Table.ParentRelations["FK_Hall_Sector"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_Hall_Sector"]);
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public PlaceRow[] GetPlaceRows() {
//                if ((this.Table.ChildRelations["FK_Place_Hall"] == null)) {
//                    return new PlaceRow[0];
//                }
//                else {
//                    return ((PlaceRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Place_Hall"])));
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class LogingRow : global::System.Data.DataRow {
            
//            private LogingDataTable tableLoging;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal LogingRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableLoging = ((LogingDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int ID {
//                get {
//                    return ((int)(this[this.tableLoging.IDColumn]));
//                }
//                set {
//                    this[this.tableLoging.IDColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public System.DateTime Time {
//                get {
//                    return ((global::System.DateTime)(this[this.tableLoging.TimeColumn]));
//                }
//                set {
//                    this[this.tableLoging.TimeColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public string Action {
//                get {
//                    try {
//                        return ((string)(this[this.tableLoging.ActionColumn]));
//                    }
//                    catch (global::System.InvalidCastException e) {
//                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Action\' в таблице \'Loging\' равно DBNull.", e);
//                    }
//                }
//                set {
//                    this[this.tableLoging.ActionColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public bool IsActionNull() {
//                return this.IsNull(this.tableLoging.ActionColumn);
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public void SetActionNull() {
//                this[this.tableLoging.ActionColumn] = global::System.Convert.DBNull;
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class PlaceRow : global::System.Data.DataRow {
            
//            private PlaceDataTable tablePlace;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal PlaceRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tablePlace = ((PlaceDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int ID {
//                get {
//                    return ((int)(this[this.tablePlace.IDColumn]));
//                }
//                set {
//                    this[this.tablePlace.IDColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public string Title {
//                get {
//                    return ((string)(this[this.tablePlace.TitleColumn]));
//                }
//                set {
//                    this[this.tablePlace.TitleColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public string City {
//                get {
//                    return ((string)(this[this.tablePlace.CityColumn]));
//                }
//                set {
//                    this[this.tablePlace.CityColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public string Address {
//                get {
//                    return ((string)(this[this.tablePlace.AddressColumn]));
//                }
//                set {
//                    this[this.tablePlace.AddressColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int Capacity {
//                get {
//                    return ((int)(this[this.tablePlace.CapacityColumn]));
//                }
//                set {
//                    this[this.tablePlace.CapacityColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int IDHall {
//                get {
//                    return ((int)(this[this.tablePlace.IDHallColumn]));
//                }
//                set {
//                    this[this.tablePlace.IDHallColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public HallRow HallRow {
//                get {
//                    return ((HallRow)(this.GetParentRow(this.Table.ParentRelations["FK_Place_Hall"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_Place_Hall"]);
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public TicketsRow[] GetTicketsRows() {
//                if ((this.Table.ChildRelations["FK_Tickets_Place"] == null)) {
//                    return new TicketsRow[0];
//                }
//                else {
//                    return ((TicketsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Tickets_Place"])));
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class RoleRow : global::System.Data.DataRow {
            
//            private RoleDataTable tableRole;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal RoleRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableRole = ((RoleDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int ID {
//                get {
//                    return ((int)(this[this.tableRole.IDColumn]));
//                }
//                set {
//                    this[this.tableRole.IDColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public string Title {
//                get {
//                    return ((string)(this[this.tableRole.TitleColumn]));
//                }
//                set {
//                    this[this.tableRole.TitleColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public UsersRow[] GetUsersRows() {
//                if ((this.Table.ChildRelations["FK_Users_Role"] == null)) {
//                    return new UsersRow[0];
//                }
//                else {
//                    return ((UsersRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Users_Role"])));
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class SeatRow : global::System.Data.DataRow {
            
//            private SeatDataTable tableSeat;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal SeatRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableSeat = ((SeatDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int ID {
//                get {
//                    return ((int)(this[this.tableSeat.IDColumn]));
//                }
//                set {
//                    this[this.tableSeat.IDColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int Row {
//                get {
//                    return ((int)(this[this.tableSeat.RowColumn]));
//                }
//                set {
//                    this[this.tableSeat.RowColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int Number {
//                get {
//                    return ((int)(this[this.tableSeat.NumberColumn]));
//                }
//                set {
//                    this[this.tableSeat.NumberColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public SectorRow[] GetSectorRows() {
//                if ((this.Table.ChildRelations["FK_Sector_Seat"] == null)) {
//                    return new SectorRow[0];
//                }
//                else {
//                    return ((SectorRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Sector_Seat"])));
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class SectorRow : global::System.Data.DataRow {
            
//            private SectorDataTable tableSector;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal SectorRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableSector = ((SectorDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int ID {
//                get {
//                    return ((int)(this[this.tableSector.IDColumn]));
//                }
//                set {
//                    this[this.tableSector.IDColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public string Type {
//                get {
//                    return ((string)(this[this.tableSector.TypeColumn]));
//                }
//                set {
//                    this[this.tableSector.TypeColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int IDSeat {
//                get {
//                    return ((int)(this[this.tableSector.IDSeatColumn]));
//                }
//                set {
//                    this[this.tableSector.IDSeatColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int CountSeats {
//                get {
//                    return ((int)(this[this.tableSector.CountSeatsColumn]));
//                }
//                set {
//                    this[this.tableSector.CountSeatsColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int Capacity {
//                get {
//                    return ((int)(this[this.tableSector.CapacityColumn]));
//                }
//                set {
//                    this[this.tableSector.CapacityColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public SeatRow SeatRow {
//                get {
//                    return ((SeatRow)(this.GetParentRow(this.Table.ParentRelations["FK_Sector_Seat"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_Sector_Seat"]);
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public HallRow[] GetHallRows() {
//                if ((this.Table.ChildRelations["FK_Hall_Sector"] == null)) {
//                    return new HallRow[0];
//                }
//                else {
//                    return ((HallRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Hall_Sector"])));
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class TicketsRow : global::System.Data.DataRow {
            
//            private TicketsDataTable tableTickets;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal TicketsRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableTickets = ((TicketsDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int ID {
//                get {
//                    return ((int)(this[this.tableTickets.IDColumn]));
//                }
//                set {
//                    this[this.tableTickets.IDColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int IDType {
//                get {
//                    return ((int)(this[this.tableTickets.IDTypeColumn]));
//                }
//                set {
//                    this[this.tableTickets.IDTypeColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int IDPlace {
//                get {
//                    return ((int)(this[this.tableTickets.IDPlaceColumn]));
//                }
//                set {
//                    this[this.tableTickets.IDPlaceColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int IDEvent {
//                get {
//                    return ((int)(this[this.tableTickets.IDEventColumn]));
//                }
//                set {
//                    this[this.tableTickets.IDEventColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public byte[] QRPhoto {
//                get {
//                    return ((byte[])(this[this.tableTickets.QRPhotoColumn]));
//                }
//                set {
//                    this[this.tableTickets.QRPhotoColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public EventsRow EventsRow {
//                get {
//                    return ((EventsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Tickets_Events"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_Tickets_Events"]);
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public PlaceRow PlaceRow {
//                get {
//                    return ((PlaceRow)(this.GetParentRow(this.Table.ParentRelations["FK_Tickets_Place"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_Tickets_Place"]);
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public TicketTypeRow TicketTypeRow {
//                get {
//                    return ((TicketTypeRow)(this.GetParentRow(this.Table.ParentRelations["FK_Tickets_TicketType"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_Tickets_TicketType"]);
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public VisitorsRow[] GetVisitorsRows() {
//                if ((this.Table.ChildRelations["FK_Visitors_Tickets"] == null)) {
//                    return new VisitorsRow[0];
//                }
//                else {
//                    return ((VisitorsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Visitors_Tickets"])));
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class TicketTypeRow : global::System.Data.DataRow {
            
//            private TicketTypeDataTable tableTicketType;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal TicketTypeRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableTicketType = ((TicketTypeDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int ID {
//                get {
//                    return ((int)(this[this.tableTicketType.IDColumn]));
//                }
//                set {
//                    this[this.tableTicketType.IDColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public string Title {
//                get {
//                    return ((string)(this[this.tableTicketType.TitleColumn]));
//                }
//                set {
//                    this[this.tableTicketType.TitleColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public decimal Price {
//                get {
//                    return ((decimal)(this[this.tableTicketType.PriceColumn]));
//                }
//                set {
//                    this[this.tableTicketType.PriceColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public TicketsRow[] GetTicketsRows() {
//                if ((this.Table.ChildRelations["FK_Tickets_TicketType"] == null)) {
//                    return new TicketsRow[0];
//                }
//                else {
//                    return ((TicketsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Tickets_TicketType"])));
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class UsersRow : global::System.Data.DataRow {
            
//            private UsersDataTable tableUsers;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal UsersRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableUsers = ((UsersDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int ID {
//                get {
//                    return ((int)(this[this.tableUsers.IDColumn]));
//                }
//                set {
//                    this[this.tableUsers.IDColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public string Login {
//                get {
//                    return ((string)(this[this.tableUsers.LoginColumn]));
//                }
//                set {
//                    this[this.tableUsers.LoginColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public string Password {
//                get {
//                    return ((string)(this[this.tableUsers.PasswordColumn]));
//                }
//                set {
//                    this[this.tableUsers.PasswordColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int IDRole {
//                get {
//                    return ((int)(this[this.tableUsers.IDRoleColumn]));
//                }
//                set {
//                    this[this.tableUsers.IDRoleColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public RoleRow RoleRow {
//                get {
//                    return ((RoleRow)(this.GetParentRow(this.Table.ParentRelations["FK_Users_Role"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_Users_Role"]);
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public EventsRow[] GetEventsRows() {
//                if ((this.Table.ChildRelations["FK_Events_Users"] == null)) {
//                    return new EventsRow[0];
//                }
//                else {
//                    return ((EventsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Events_Users"])));
//                }
//            }
//        }
        
//        /// <summary>
//        ///Represents strongly named DataRow class.
//        ///</summary>
//        public partial class VisitorsRow : global::System.Data.DataRow {
            
//            private VisitorsDataTable tableVisitors;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal VisitorsRow(global::System.Data.DataRowBuilder rb) : 
//                    base(rb) {
//                this.tableVisitors = ((VisitorsDataTable)(this.Table));
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int ID {
//                get {
//                    return ((int)(this[this.tableVisitors.IDColumn]));
//                }
//                set {
//                    this[this.tableVisitors.IDColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public string Name {
//                get {
//                    return ((string)(this[this.tableVisitors.NameColumn]));
//                }
//                set {
//                    this[this.tableVisitors.NameColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public string Surname {
//                get {
//                    return ((string)(this[this.tableVisitors.SurnameColumn]));
//                }
//                set {
//                    this[this.tableVisitors.SurnameColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public string Phone {
//                get {
//                    return ((string)(this[this.tableVisitors.PhoneColumn]));
//                }
//                set {
//                    this[this.tableVisitors.PhoneColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int IDTicket {
//                get {
//                    return ((int)(this[this.tableVisitors.IDTicketColumn]));
//                }
//                set {
//                    this[this.tableVisitors.IDTicketColumn] = value;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public TicketsRow TicketsRow {
//                get {
//                    return ((TicketsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Visitors_Tickets"])));
//                }
//                set {
//                    this.SetParentRow(value, this.Table.ParentRelations["FK_Visitors_Tickets"]);
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public class Event_StatusRowChangeEvent : global::System.EventArgs {
            
//            private Event_StatusRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public Event_StatusRowChangeEvent(Event_StatusRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public Event_StatusRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public class EventsRowChangeEvent : global::System.EventArgs {
            
//            private EventsRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public EventsRowChangeEvent(EventsRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public EventsRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public class HallRowChangeEvent : global::System.EventArgs {
            
//            private HallRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public HallRowChangeEvent(HallRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public HallRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public class LogingRowChangeEvent : global::System.EventArgs {
            
//            private LogingRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public LogingRowChangeEvent(LogingRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public LogingRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public class PlaceRowChangeEvent : global::System.EventArgs {
            
//            private PlaceRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public PlaceRowChangeEvent(PlaceRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public PlaceRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public class RoleRowChangeEvent : global::System.EventArgs {
            
//            private RoleRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public RoleRowChangeEvent(RoleRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public RoleRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public class SeatRowChangeEvent : global::System.EventArgs {
            
//            private SeatRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public SeatRowChangeEvent(SeatRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public SeatRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public class SectorRowChangeEvent : global::System.EventArgs {
            
//            private SectorRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public SectorRowChangeEvent(SectorRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public SectorRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public class TicketsRowChangeEvent : global::System.EventArgs {
            
//            private TicketsRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public TicketsRowChangeEvent(TicketsRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public TicketsRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public class TicketTypeRowChangeEvent : global::System.EventArgs {
            
//            private TicketTypeRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public TicketTypeRowChangeEvent(TicketTypeRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public TicketTypeRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public class UsersRowChangeEvent : global::System.EventArgs {
            
//            private UsersRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public UsersRowChangeEvent(UsersRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public UsersRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
        
//        /// <summary>
//        ///Row event argument class
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public class VisitorsRowChangeEvent : global::System.EventArgs {
            
//            private VisitorsRow eventRow;
            
//            private global::System.Data.DataRowAction eventAction;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public VisitorsRowChangeEvent(VisitorsRow row, global::System.Data.DataRowAction action) {
//                this.eventRow = row;
//                this.eventAction = action;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public VisitorsRow Row {
//                get {
//                    return this.eventRow;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public global::System.Data.DataRowAction Action {
//                get {
//                    return this.eventAction;
//                }
//            }
//        }
//    }
//}
//namespace KaSSierYaremko.BiletsDataSetTableAdapters {
    
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class Event_StatusTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public Event_StatusTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "Event_Status";
//            tableMapping.ColumnMappings.Add("ID", "ID");
//            tableMapping.ColumnMappings.Add("Title", "Title");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Event_Status] WHERE (([ID] = @Original_ID) AND ([Title] = @Ori" +
//                "ginal_Title))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Event_Status] ([ID], [Title]) VALUES (@ID, @Title);\r\nSELECT ID" +
//                ", Title FROM Event_Status WHERE (ID = @ID)";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Event_Status] SET [ID] = @ID, [Title] = @Title WHERE (([ID] = @Orig" +
//                "inal_ID) AND ([Title] = @Original_Title));\r\nSELECT ID, Title FROM Event_Status W" +
//                "HERE (ID = @ID)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = global::KaSSierYaremko.Properties.Settings.Default.BiletsConnectionString;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT ID, Title FROM dbo.Event_Status";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(BiletsDataSet.Event_StatusDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual BiletsDataSet.Event_StatusDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            BiletsDataSet.Event_StatusDataTable dataTable = new BiletsDataSet.Event_StatusDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet.Event_StatusDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet dataSet) {
//            return this.Adapter.Update(dataSet, "Event_Status");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_ID, string Original_Title) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
//            if ((Original_Title == null)) {
//                throw new global::System.ArgumentNullException("Original_Title");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Title));
//            }
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(int ID, string Title) {
//            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID));
//            if ((Title == null)) {
//                throw new global::System.ArgumentNullException("Title");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Title));
//            }
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int ID, string Title, int Original_ID, string Original_Title) {
//            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID));
//            if ((Title == null)) {
//                throw new global::System.ArgumentNullException("Title");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Title));
//            }
//            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID));
//            if ((Original_Title == null)) {
//                throw new global::System.ArgumentNullException("Original_Title");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Title));
//            }
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(string Title, int Original_ID, string Original_Title) {
//            return this.Update(Original_ID, Title, Original_ID, Original_Title);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class EventsTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public EventsTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "Events";
//            tableMapping.ColumnMappings.Add("ID", "ID");
//            tableMapping.ColumnMappings.Add("Name", "Name");
//            tableMapping.ColumnMappings.Add("IDStatus", "IDStatus");
//            tableMapping.ColumnMappings.Add("SoldTickets", "SoldTickets");
//            tableMapping.ColumnMappings.Add("VolumeTickets", "VolumeTickets");
//            tableMapping.ColumnMappings.Add("Organization", "Organization");
//            tableMapping.ColumnMappings.Add("IDUser", "IDUser");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Events] WHERE (([ID] = @Original_ID) AND ([Name] = @Original_Name) AND ([IDStatus] = @Original_IDStatus) AND ([SoldTickets] = @Original_SoldTickets) AND ([VolumeTickets] = @Original_VolumeTickets) AND ([Organization] = @Original_Organization) AND ([IDUser] = @Original_IDUser))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SoldTickets", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SoldTickets", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VolumeTickets", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolumeTickets", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Organization", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Organization", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Events] ([ID], [Name], [IDStatus], [SoldTickets], [VolumeTickets], [Organization], [IDUser]) VALUES (@ID, @Name, @IDStatus, @SoldTickets, @VolumeTickets, @Organization, @IDUser);
//SELECT ID, Name, IDStatus, SoldTickets, VolumeTickets, Organization, IDUser FROM Events WHERE (ID = @ID)";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SoldTickets", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SoldTickets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolumeTickets", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolumeTickets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Organization", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Organization", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Events] SET [ID] = @ID, [Name] = @Name, [IDStatus] = @IDStatus, [SoldTickets] = @SoldTickets, [VolumeTickets] = @VolumeTickets, [Organization] = @Organization, [IDUser] = @IDUser WHERE (([ID] = @Original_ID) AND ([Name] = @Original_Name) AND ([IDStatus] = @Original_IDStatus) AND ([SoldTickets] = @Original_SoldTickets) AND ([VolumeTickets] = @Original_VolumeTickets) AND ([Organization] = @Original_Organization) AND ([IDUser] = @Original_IDUser));
//SELECT ID, Name, IDStatus, SoldTickets, VolumeTickets, Organization, IDUser FROM Events WHERE (ID = @ID)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SoldTickets", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SoldTickets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolumeTickets", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolumeTickets", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Organization", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Organization", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SoldTickets", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SoldTickets", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VolumeTickets", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolumeTickets", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Organization", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Organization", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDUser", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = global::KaSSierYaremko.Properties.Settings.Default.BiletsConnectionString;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT ID, Name, IDStatus, SoldTickets, VolumeTickets, Organization, IDUser FROM " +
//                "dbo.Events";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(BiletsDataSet.EventsDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual BiletsDataSet.EventsDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            BiletsDataSet.EventsDataTable dataTable = new BiletsDataSet.EventsDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet.EventsDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet dataSet) {
//            return this.Adapter.Update(dataSet, "Events");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_ID, string Original_Name, int Original_IDStatus, int Original_SoldTickets, int Original_VolumeTickets, string Original_Organization, int Original_IDUser) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
//            if ((Original_Name == null)) {
//                throw new global::System.ArgumentNullException("Original_Name");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));
//            }
//            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_IDStatus));
//            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_SoldTickets));
//            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_VolumeTickets));
//            if ((Original_Organization == null)) {
//                throw new global::System.ArgumentNullException("Original_Organization");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Organization));
//            }
//            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_IDUser));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(int ID, string Name, int IDStatus, int SoldTickets, int VolumeTickets, string Organization, int IDUser) {
//            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID));
//            if ((Name == null)) {
//                throw new global::System.ArgumentNullException("Name");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Name));
//            }
//            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(IDStatus));
//            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(SoldTickets));
//            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(VolumeTickets));
//            if ((Organization == null)) {
//                throw new global::System.ArgumentNullException("Organization");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Organization));
//            }
//            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(IDUser));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int ID, string Name, int IDStatus, int SoldTickets, int VolumeTickets, string Organization, int IDUser, int Original_ID, string Original_Name, int Original_IDStatus, int Original_SoldTickets, int Original_VolumeTickets, string Original_Organization, int Original_IDUser) {
//            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID));
//            if ((Name == null)) {
//                throw new global::System.ArgumentNullException("Name");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Name));
//            }
//            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(IDStatus));
//            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(SoldTickets));
//            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(VolumeTickets));
//            if ((Organization == null)) {
//                throw new global::System.ArgumentNullException("Organization");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Organization));
//            }
//            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(IDUser));
//            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID));
//            if ((Original_Name == null)) {
//                throw new global::System.ArgumentNullException("Original_Name");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Name));
//            }
//            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_IDStatus));
//            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_SoldTickets));
//            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_VolumeTickets));
//            if ((Original_Organization == null)) {
//                throw new global::System.ArgumentNullException("Original_Organization");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Organization));
//            }
//            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_IDUser));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(string Name, int IDStatus, int SoldTickets, int VolumeTickets, string Organization, int IDUser, int Original_ID, string Original_Name, int Original_IDStatus, int Original_SoldTickets, int Original_VolumeTickets, string Original_Organization, int Original_IDUser) {
//            return this.Update(Original_ID, Name, IDStatus, SoldTickets, VolumeTickets, Organization, IDUser, Original_ID, Original_Name, Original_IDStatus, Original_SoldTickets, Original_VolumeTickets, Original_Organization, Original_IDUser);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class HallTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public HallTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "Hall";
//            tableMapping.ColumnMappings.Add("ID", "ID");
//            tableMapping.ColumnMappings.Add("CountSeats", "CountSeats");
//            tableMapping.ColumnMappings.Add("IDSector", "IDSector");
//            tableMapping.ColumnMappings.Add("Capacity", "Capacity");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Hall] WHERE (([ID] = @Original_ID) AND ([CountSeats] = @Origin" +
//                "al_CountSeats) AND ([IDSector] = @Original_IDSector) AND ([Capacity] = @Original" +
//                "_Capacity))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountSeats", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountSeats", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDSector", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDSector", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Capacity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Hall] ([ID], [CountSeats], [IDSector], [Capacity]) VALUES (@ID" +
//                ", @CountSeats, @IDSector, @Capacity);\r\nSELECT ID, CountSeats, IDSector, Capacity" +
//                " FROM Hall WHERE (ID = @ID)";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountSeats", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountSeats", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDSector", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDSector", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Capacity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Hall] SET [ID] = @ID, [CountSeats] = @CountSeats, [IDSector] = @IDSector, [Capacity] = @Capacity WHERE (([ID] = @Original_ID) AND ([CountSeats] = @Original_CountSeats) AND ([IDSector] = @Original_IDSector) AND ([Capacity] = @Original_Capacity));
//SELECT ID, CountSeats, IDSector, Capacity FROM Hall WHERE (ID = @ID)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountSeats", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountSeats", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDSector", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDSector", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Capacity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountSeats", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountSeats", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDSector", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDSector", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Capacity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = global::KaSSierYaremko.Properties.Settings.Default.BiletsConnectionString;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT ID, CountSeats, IDSector, Capacity FROM dbo.Hall";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(BiletsDataSet.HallDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual BiletsDataSet.HallDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            BiletsDataSet.HallDataTable dataTable = new BiletsDataSet.HallDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet.HallDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet dataSet) {
//            return this.Adapter.Update(dataSet, "Hall");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_ID, int Original_CountSeats, int Original_IDSector, int Original_Capacity) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
//            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_CountSeats));
//            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_IDSector));
//            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Capacity));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(int ID, int CountSeats, int IDSector, int Capacity) {
//            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID));
//            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(CountSeats));
//            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(IDSector));
//            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Capacity));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int ID, int CountSeats, int IDSector, int Capacity, int Original_ID, int Original_CountSeats, int Original_IDSector, int Original_Capacity) {
//            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID));
//            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(CountSeats));
//            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(IDSector));
//            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Capacity));
//            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID));
//            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_CountSeats));
//            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_IDSector));
//            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Capacity));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int CountSeats, int IDSector, int Capacity, int Original_ID, int Original_CountSeats, int Original_IDSector, int Original_Capacity) {
//            return this.Update(Original_ID, CountSeats, IDSector, Capacity, Original_ID, Original_CountSeats, Original_IDSector, Original_Capacity);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class LogingTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public LogingTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "Loging";
//            tableMapping.ColumnMappings.Add("ID", "ID");
//            tableMapping.ColumnMappings.Add("Time", "Time");
//            tableMapping.ColumnMappings.Add("Action", "Action");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Loging] WHERE (([ID] = @Original_ID) AND ([Time] = @Original_T" +
//                "ime))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Loging] ([ID], [Time], [Action]) VALUES (@ID, @Time, @Action);" +
//                "\r\nSELECT ID, Time, Action FROM Loging WHERE (ID = @ID)";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Action", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Action", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Loging] SET [ID] = @ID, [Time] = @Time, [Action] = @Action WHERE ((" +
//                "[ID] = @Original_ID) AND ([Time] = @Original_Time));\r\nSELECT ID, Time, Action FR" +
//                "OM Loging WHERE (ID = @ID)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Action", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Action", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = global::KaSSierYaremko.Properties.Settings.Default.BiletsConnectionString;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT ID, Time, Action FROM dbo.Loging";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(BiletsDataSet.LogingDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual BiletsDataSet.LogingDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            BiletsDataSet.LogingDataTable dataTable = new BiletsDataSet.LogingDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet.LogingDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet dataSet) {
//            return this.Adapter.Update(dataSet, "Loging");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_ID, System.DateTime Original_Time) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
//            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_Time));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(int ID, System.DateTime Time, string Action) {
//            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID));
//            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Time));
//            if ((Action == null)) {
//                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Action));
//            }
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int ID, System.DateTime Time, string Action, int Original_ID, System.DateTime Original_Time) {
//            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID));
//            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Time));
//            if ((Action == null)) {
//                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Action));
//            }
//            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID));
//            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Original_Time));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(System.DateTime Time, string Action, int Original_ID, System.DateTime Original_Time) {
//            return this.Update(Original_ID, Time, Action, Original_ID, Original_Time);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class PlaceTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public PlaceTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "Place";
//            tableMapping.ColumnMappings.Add("ID", "ID");
//            tableMapping.ColumnMappings.Add("Title", "Title");
//            tableMapping.ColumnMappings.Add("City", "City");
//            tableMapping.ColumnMappings.Add("Address", "Address");
//            tableMapping.ColumnMappings.Add("Capacity", "Capacity");
//            tableMapping.ColumnMappings.Add("IDHall", "IDHall");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Place] WHERE (([ID] = @Original_ID) AND ([Title] = @Original_T" +
//                "itle) AND ([City] = @Original_City) AND ([Address] = @Original_Address) AND ([Ca" +
//                "pacity] = @Original_Capacity) AND ([IDHall] = @Original_IDHall))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_City", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Capacity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDHall", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDHall", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Place] ([ID], [Title], [City], [Address], [Capacity], [IDHall]" +
//                ") VALUES (@ID, @Title, @City, @Address, @Capacity, @IDHall);\r\nSELECT ID, Title, " +
//                "City, Address, Capacity, IDHall FROM Place WHERE (ID = @ID)";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Capacity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDHall", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDHall", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Place] SET [ID] = @ID, [Title] = @Title, [City] = @City, [Address] = @Address, [Capacity] = @Capacity, [IDHall] = @IDHall WHERE (([ID] = @Original_ID) AND ([Title] = @Original_Title) AND ([City] = @Original_City) AND ([Address] = @Original_Address) AND ([Capacity] = @Original_Capacity) AND ([IDHall] = @Original_IDHall));
//SELECT ID, Title, City, Address, Capacity, IDHall FROM Place WHERE (ID = @ID)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Capacity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDHall", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDHall", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_City", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Capacity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDHall", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDHall", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = global::KaSSierYaremko.Properties.Settings.Default.BiletsConnectionString;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT ID, Title, City, Address, Capacity, IDHall FROM dbo.Place";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(BiletsDataSet.PlaceDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual BiletsDataSet.PlaceDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            BiletsDataSet.PlaceDataTable dataTable = new BiletsDataSet.PlaceDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet.PlaceDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet dataSet) {
//            return this.Adapter.Update(dataSet, "Place");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_ID, string Original_Title, string Original_City, string Original_Address, int Original_Capacity, int Original_IDHall) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
//            if ((Original_Title == null)) {
//                throw new global::System.ArgumentNullException("Original_Title");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Title));
//            }
//            if ((Original_City == null)) {
//                throw new global::System.ArgumentNullException("Original_City");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_City));
//            }
//            if ((Original_Address == null)) {
//                throw new global::System.ArgumentNullException("Original_Address");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Address));
//            }
//            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Capacity));
//            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_IDHall));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(int ID, string Title, string City, string Address, int Capacity, int IDHall) {
//            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID));
//            if ((Title == null)) {
//                throw new global::System.ArgumentNullException("Title");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Title));
//            }
//            if ((City == null)) {
//                throw new global::System.ArgumentNullException("City");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(City));
//            }
//            if ((Address == null)) {
//                throw new global::System.ArgumentNullException("Address");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Address));
//            }
//            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Capacity));
//            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(IDHall));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int ID, string Title, string City, string Address, int Capacity, int IDHall, int Original_ID, string Original_Title, string Original_City, string Original_Address, int Original_Capacity, int Original_IDHall) {
//            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID));
//            if ((Title == null)) {
//                throw new global::System.ArgumentNullException("Title");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Title));
//            }
//            if ((City == null)) {
//                throw new global::System.ArgumentNullException("City");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(City));
//            }
//            if ((Address == null)) {
//                throw new global::System.ArgumentNullException("Address");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Address));
//            }
//            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Capacity));
//            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(IDHall));
//            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID));
//            if ((Original_Title == null)) {
//                throw new global::System.ArgumentNullException("Original_Title");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Title));
//            }
//            if ((Original_City == null)) {
//                throw new global::System.ArgumentNullException("Original_City");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_City));
//            }
//            if ((Original_Address == null)) {
//                throw new global::System.ArgumentNullException("Original_Address");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Address));
//            }
//            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Capacity));
//            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_IDHall));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(string Title, string City, string Address, int Capacity, int IDHall, int Original_ID, string Original_Title, string Original_City, string Original_Address, int Original_Capacity, int Original_IDHall) {
//            return this.Update(Original_ID, Title, City, Address, Capacity, IDHall, Original_ID, Original_Title, Original_City, Original_Address, Original_Capacity, Original_IDHall);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class RoleTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public RoleTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "Role";
//            tableMapping.ColumnMappings.Add("ID", "ID");
//            tableMapping.ColumnMappings.Add("Title", "Title");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Role] WHERE (([ID] = @Original_ID) AND ([Title] = @Original_Ti" +
//                "tle))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Role] ([ID], [Title]) VALUES (@ID, @Title);\r\nSELECT ID, Title " +
//                "FROM Role WHERE (ID = @ID)";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Role] SET [ID] = @ID, [Title] = @Title WHERE (([ID] = @Original_ID)" +
//                " AND ([Title] = @Original_Title));\r\nSELECT ID, Title FROM Role WHERE (ID = @ID)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = global::KaSSierYaremko.Properties.Settings.Default.BiletsConnectionString;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT ID, Title FROM dbo.Role";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(BiletsDataSet.RoleDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual BiletsDataSet.RoleDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            BiletsDataSet.RoleDataTable dataTable = new BiletsDataSet.RoleDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet.RoleDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet dataSet) {
//            return this.Adapter.Update(dataSet, "Role");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_ID, string Original_Title) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
//            if ((Original_Title == null)) {
//                throw new global::System.ArgumentNullException("Original_Title");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Title));
//            }
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(int ID, string Title) {
//            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID));
//            if ((Title == null)) {
//                throw new global::System.ArgumentNullException("Title");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Title));
//            }
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int ID, string Title, int Original_ID, string Original_Title) {
//            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID));
//            if ((Title == null)) {
//                throw new global::System.ArgumentNullException("Title");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Title));
//            }
//            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID));
//            if ((Original_Title == null)) {
//                throw new global::System.ArgumentNullException("Original_Title");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Title));
//            }
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(string Title, int Original_ID, string Original_Title) {
//            return this.Update(Original_ID, Title, Original_ID, Original_Title);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class SeatTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public SeatTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "Seat";
//            tableMapping.ColumnMappings.Add("ID", "ID");
//            tableMapping.ColumnMappings.Add("Row", "Row");
//            tableMapping.ColumnMappings.Add("Number", "Number");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Seat] WHERE (([ID] = @Original_ID) AND ([Row] = @Original_Row)" +
//                " AND ([Number] = @Original_Number))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Row", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Row", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Seat] ([ID], [Row], [Number]) VALUES (@ID, @Row, @Number);\r\nSE" +
//                "LECT ID, Row, Number FROM Seat WHERE (ID = @ID)";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Row", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Row", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Seat] SET [ID] = @ID, [Row] = @Row, [Number] = @Number WHERE (([ID]" +
//                " = @Original_ID) AND ([Row] = @Original_Row) AND ([Number] = @Original_Number));" +
//                "\r\nSELECT ID, Row, Number FROM Seat WHERE (ID = @ID)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Row", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Row", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Row", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Row", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = global::KaSSierYaremko.Properties.Settings.Default.BiletsConnectionString;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT ID, Row, Number FROM dbo.Seat";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(BiletsDataSet.SeatDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual BiletsDataSet.SeatDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            BiletsDataSet.SeatDataTable dataTable = new BiletsDataSet.SeatDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet.SeatDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet dataSet) {
//            return this.Adapter.Update(dataSet, "Seat");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_ID, int Original_Row, int Original_Number) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
//            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Row));
//            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Number));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(int ID, int Row, int Number) {
//            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID));
//            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Row));
//            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Number));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int ID, int Row, int Number, int Original_ID, int Original_Row, int Original_Number) {
//            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID));
//            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Row));
//            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Number));
//            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID));
//            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Row));
//            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Number));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int Row, int Number, int Original_ID, int Original_Row, int Original_Number) {
//            return this.Update(Original_ID, Row, Number, Original_ID, Original_Row, Original_Number);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class SectorTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public SectorTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "Sector";
//            tableMapping.ColumnMappings.Add("ID", "ID");
//            tableMapping.ColumnMappings.Add("Type", "Type");
//            tableMapping.ColumnMappings.Add("IDSeat", "IDSeat");
//            tableMapping.ColumnMappings.Add("CountSeats", "CountSeats");
//            tableMapping.ColumnMappings.Add("Capacity", "Capacity");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Sector] WHERE (([ID] = @Original_ID) AND ([Type] = @Original_T" +
//                "ype) AND ([IDSeat] = @Original_IDSeat) AND ([CountSeats] = @Original_CountSeats)" +
//                " AND ([Capacity] = @Original_Capacity))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDSeat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDSeat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountSeats", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountSeats", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Capacity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Sector] ([ID], [Type], [IDSeat], [CountSeats], [Capacity]) VAL" +
//                "UES (@ID, @Type, @IDSeat, @CountSeats, @Capacity);\r\nSELECT ID, Type, IDSeat, Cou" +
//                "ntSeats, Capacity FROM Sector WHERE (ID = @ID)";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDSeat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDSeat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountSeats", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountSeats", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Capacity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Sector] SET [ID] = @ID, [Type] = @Type, [IDSeat] = @IDSeat, [CountSeats] = @CountSeats, [Capacity] = @Capacity WHERE (([ID] = @Original_ID) AND ([Type] = @Original_Type) AND ([IDSeat] = @Original_IDSeat) AND ([CountSeats] = @Original_CountSeats) AND ([Capacity] = @Original_Capacity));
//SELECT ID, Type, IDSeat, CountSeats, Capacity FROM Sector WHERE (ID = @ID)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDSeat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDSeat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountSeats", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountSeats", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Capacity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDSeat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDSeat", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountSeats", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountSeats", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Capacity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Capacity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = global::KaSSierYaremko.Properties.Settings.Default.BiletsConnectionString;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT ID, Type, IDSeat, CountSeats, Capacity FROM dbo.Sector";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(BiletsDataSet.SectorDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual BiletsDataSet.SectorDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            BiletsDataSet.SectorDataTable dataTable = new BiletsDataSet.SectorDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet.SectorDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet dataSet) {
//            return this.Adapter.Update(dataSet, "Sector");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_ID, string Original_Type, int Original_IDSeat, int Original_CountSeats, int Original_Capacity) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
//            if ((Original_Type == null)) {
//                throw new global::System.ArgumentNullException("Original_Type");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Type));
//            }
//            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_IDSeat));
//            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_CountSeats));
//            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Capacity));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(int ID, string Type, int IDSeat, int CountSeats, int Capacity) {
//            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID));
//            if ((Type == null)) {
//                throw new global::System.ArgumentNullException("Type");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Type));
//            }
//            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(IDSeat));
//            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(CountSeats));
//            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Capacity));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int ID, string Type, int IDSeat, int CountSeats, int Capacity, int Original_ID, string Original_Type, int Original_IDSeat, int Original_CountSeats, int Original_Capacity) {
//            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID));
//            if ((Type == null)) {
//                throw new global::System.ArgumentNullException("Type");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Type));
//            }
//            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(IDSeat));
//            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(CountSeats));
//            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Capacity));
//            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID));
//            if ((Original_Type == null)) {
//                throw new global::System.ArgumentNullException("Original_Type");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Type));
//            }
//            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_IDSeat));
//            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_CountSeats));
//            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Capacity));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(string Type, int IDSeat, int CountSeats, int Capacity, int Original_ID, string Original_Type, int Original_IDSeat, int Original_CountSeats, int Original_Capacity) {
//            return this.Update(Original_ID, Type, IDSeat, CountSeats, Capacity, Original_ID, Original_Type, Original_IDSeat, Original_CountSeats, Original_Capacity);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class TicketsTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public TicketsTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "Tickets";
//            tableMapping.ColumnMappings.Add("ID", "ID");
//            tableMapping.ColumnMappings.Add("IDType", "IDType");
//            tableMapping.ColumnMappings.Add("IDPlace", "IDPlace");
//            tableMapping.ColumnMappings.Add("IDEvent", "IDEvent");
//            tableMapping.ColumnMappings.Add("QRPhoto", "QRPhoto");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Tickets] WHERE (([ID] = @Original_ID) AND ([IDType] = @Origina" +
//                "l_IDType) AND ([IDPlace] = @Original_IDPlace) AND ([IDEvent] = @Original_IDEvent" +
//                "))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDPlace", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDPlace", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDEvent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDEvent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Tickets] ([ID], [IDType], [IDPlace], [IDEvent], [QRPhoto]) VAL" +
//                "UES (@ID, @IDType, @IDPlace, @IDEvent, @QRPhoto);\r\nSELECT ID, IDType, IDPlace, I" +
//                "DEvent, QRPhoto FROM Tickets WHERE (ID = @ID)";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDPlace", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDPlace", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDEvent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDEvent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QRPhoto", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QRPhoto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Tickets] SET [ID] = @ID, [IDType] = @IDType, [IDPlace] = @IDPlace, [IDEvent] = @IDEvent, [QRPhoto] = @QRPhoto WHERE (([ID] = @Original_ID) AND ([IDType] = @Original_IDType) AND ([IDPlace] = @Original_IDPlace) AND ([IDEvent] = @Original_IDEvent));
//SELECT ID, IDType, IDPlace, IDEvent, QRPhoto FROM Tickets WHERE (ID = @ID)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDPlace", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDPlace", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDEvent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDEvent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QRPhoto", global::System.Data.SqlDbType.Image, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QRPhoto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDPlace", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDPlace", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDEvent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDEvent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = global::KaSSierYaremko.Properties.Settings.Default.BiletsConnectionString;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT ID, IDType, IDPlace, IDEvent, QRPhoto FROM dbo.Tickets";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(BiletsDataSet.TicketsDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual BiletsDataSet.TicketsDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            BiletsDataSet.TicketsDataTable dataTable = new BiletsDataSet.TicketsDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet.TicketsDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet dataSet) {
//            return this.Adapter.Update(dataSet, "Tickets");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_ID, int Original_IDType, int Original_IDPlace, int Original_IDEvent) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
//            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_IDType));
//            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_IDPlace));
//            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_IDEvent));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(int ID, int IDType, int IDPlace, int IDEvent, byte[] QRPhoto) {
//            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID));
//            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(IDType));
//            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(IDPlace));
//            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(IDEvent));
//            if ((QRPhoto == null)) {
//                throw new global::System.ArgumentNullException("QRPhoto");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[4].Value = ((byte[])(QRPhoto));
//            }
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int ID, int IDType, int IDPlace, int IDEvent, byte[] QRPhoto, int Original_ID, int Original_IDType, int Original_IDPlace, int Original_IDEvent) {
//            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID));
//            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(IDType));
//            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(IDPlace));
//            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(IDEvent));
//            if ((QRPhoto == null)) {
//                throw new global::System.ArgumentNullException("QRPhoto");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[4].Value = ((byte[])(QRPhoto));
//            }
//            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID));
//            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_IDType));
//            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_IDPlace));
//            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_IDEvent));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int IDType, int IDPlace, int IDEvent, byte[] QRPhoto, int Original_ID, int Original_IDType, int Original_IDPlace, int Original_IDEvent) {
//            return this.Update(Original_ID, IDType, IDPlace, IDEvent, QRPhoto, Original_ID, Original_IDType, Original_IDPlace, Original_IDEvent);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class TicketTypeTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public TicketTypeTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "TicketType";
//            tableMapping.ColumnMappings.Add("ID", "ID");
//            tableMapping.ColumnMappings.Add("Title", "Title");
//            tableMapping.ColumnMappings.Add("Price", "Price");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TicketType] WHERE (([ID] = @Original_ID) AND ([Title] = @Origi" +
//                "nal_Title) AND ([Price] = @Original_Price))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TicketType] ([ID], [Title], [Price]) VALUES (@ID, @Title, @Pri" +
//                "ce);\r\nSELECT ID, Title, Price FROM TicketType WHERE (ID = @ID)";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TicketType] SET [ID] = @ID, [Title] = @Title, [Price] = @Price WHER" +
//                "E (([ID] = @Original_ID) AND ([Title] = @Original_Title) AND ([Price] = @Origina" +
//                "l_Price));\r\nSELECT ID, Title, Price FROM TicketType WHERE (ID = @ID)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Price", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Price", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Price", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Price", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = global::KaSSierYaremko.Properties.Settings.Default.BiletsConnectionString;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT ID, Title, Price FROM dbo.TicketType";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(BiletsDataSet.TicketTypeDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual BiletsDataSet.TicketTypeDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            BiletsDataSet.TicketTypeDataTable dataTable = new BiletsDataSet.TicketTypeDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet.TicketTypeDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet dataSet) {
//            return this.Adapter.Update(dataSet, "TicketType");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_ID, string Original_Title, decimal Original_Price) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
//            if ((Original_Title == null)) {
//                throw new global::System.ArgumentNullException("Original_Title");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Title));
//            }
//            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_Price));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(int ID, string Title, decimal Price) {
//            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID));
//            if ((Title == null)) {
//                throw new global::System.ArgumentNullException("Title");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Title));
//            }
//            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(Price));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int ID, string Title, decimal Price, int Original_ID, string Original_Title, decimal Original_Price) {
//            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID));
//            if ((Title == null)) {
//                throw new global::System.ArgumentNullException("Title");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Title));
//            }
//            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Price));
//            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID));
//            if ((Original_Title == null)) {
//                throw new global::System.ArgumentNullException("Original_Title");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Title));
//            }
//            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_Price));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(string Title, decimal Price, int Original_ID, string Original_Title, decimal Original_Price) {
//            return this.Update(Original_ID, Title, Price, Original_ID, Original_Title, Original_Price);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class UsersTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public UsersTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "Users";
//            tableMapping.ColumnMappings.Add("ID", "ID");
//            tableMapping.ColumnMappings.Add("Login", "Login");
//            tableMapping.ColumnMappings.Add("Password", "Password");
//            tableMapping.ColumnMappings.Add("IDRole", "IDRole");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Users] WHERE (([ID] = @Original_ID) AND ([Login] = @Original_L" +
//                "ogin) AND ([Password] = @Original_Password) AND ([IDRole] = @Original_IDRole))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Login", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Login", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDRole", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDRole", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Users] ([ID], [Login], [Password], [IDRole]) VALUES (@ID, @Log" +
//                "in, @Password, @IDRole);\r\nSELECT ID, Login, Password, IDRole FROM Users WHERE (I" +
//                "D = @ID)";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Login", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Login", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDRole", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDRole", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Users] SET [ID] = @ID, [Login] = @Login, [Password] = @Password, [IDRole] = @IDRole WHERE (([ID] = @Original_ID) AND ([Login] = @Original_Login) AND ([Password] = @Original_Password) AND ([IDRole] = @Original_IDRole));
//SELECT ID, Login, Password, IDRole FROM Users WHERE (ID = @ID)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Login", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Login", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDRole", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDRole", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Login", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Login", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDRole", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDRole", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = global::KaSSierYaremko.Properties.Settings.Default.BiletsConnectionString;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT ID, Login, Password, IDRole FROM dbo.Users";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(BiletsDataSet.UsersDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual BiletsDataSet.UsersDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            BiletsDataSet.UsersDataTable dataTable = new BiletsDataSet.UsersDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet.UsersDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet dataSet) {
//            return this.Adapter.Update(dataSet, "Users");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_ID, string Original_Login, string Original_Password, int Original_IDRole) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
//            if ((Original_Login == null)) {
//                throw new global::System.ArgumentNullException("Original_Login");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Login));
//            }
//            if ((Original_Password == null)) {
//                throw new global::System.ArgumentNullException("Original_Password");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Password));
//            }
//            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_IDRole));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(int ID, string Login, string Password, int IDRole) {
//            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID));
//            if ((Login == null)) {
//                throw new global::System.ArgumentNullException("Login");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Login));
//            }
//            if ((Password == null)) {
//                throw new global::System.ArgumentNullException("Password");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Password));
//            }
//            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(IDRole));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int ID, string Login, string Password, int IDRole, int Original_ID, string Original_Login, string Original_Password, int Original_IDRole) {
//            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID));
//            if ((Login == null)) {
//                throw new global::System.ArgumentNullException("Login");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Login));
//            }
//            if ((Password == null)) {
//                throw new global::System.ArgumentNullException("Password");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Password));
//            }
//            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(IDRole));
//            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID));
//            if ((Original_Login == null)) {
//                throw new global::System.ArgumentNullException("Original_Login");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Login));
//            }
//            if ((Original_Password == null)) {
//                throw new global::System.ArgumentNullException("Original_Password");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Password));
//            }
//            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_IDRole));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(string Login, string Password, int IDRole, int Original_ID, string Original_Login, string Original_Password, int Original_IDRole) {
//            return this.Update(Original_ID, Login, Password, IDRole, Original_ID, Original_Login, Original_Password, Original_IDRole);
//        }
//    }
    
//    /// <summary>
//    ///Represents the connection and commands used to retrieve and save data.
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DataObjectAttribute(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
//        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//    public partial class VisitorsTableAdapter : global::System.ComponentModel.Component {
        
//        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
//        private global::System.Data.SqlClient.SqlConnection _connection;
        
//        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
//        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
//        private bool _clearBeforeFill;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public VisitorsTableAdapter() {
//            this.ClearBeforeFill = true;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
//            get {
//                if ((this._adapter == null)) {
//                    this.InitAdapter();
//                }
//                return this._adapter;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlConnection Connection {
//            get {
//                if ((this._connection == null)) {
//                    this.InitConnection();
//                }
//                return this._connection;
//            }
//            set {
//                this._connection = value;
//                if ((this.Adapter.InsertCommand != null)) {
//                    this.Adapter.InsertCommand.Connection = value;
//                }
//                if ((this.Adapter.DeleteCommand != null)) {
//                    this.Adapter.DeleteCommand.Connection = value;
//                }
//                if ((this.Adapter.UpdateCommand != null)) {
//                    this.Adapter.UpdateCommand.Connection = value;
//                }
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    if ((this.CommandCollection[i] != null)) {
//                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
//                    }
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        internal global::System.Data.SqlClient.SqlTransaction Transaction {
//            get {
//                return this._transaction;
//            }
//            set {
//                this._transaction = value;
//                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
//                    this.CommandCollection[i].Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.DeleteCommand != null))) {
//                    this.Adapter.DeleteCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.InsertCommand != null))) {
//                    this.Adapter.InsertCommand.Transaction = this._transaction;
//                }
//                if (((this.Adapter != null) 
//                            && (this.Adapter.UpdateCommand != null))) {
//                    this.Adapter.UpdateCommand.Transaction = this._transaction;
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
//            get {
//                if ((this._commandCollection == null)) {
//                    this.InitCommandCollection();
//                }
//                return this._commandCollection;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public bool ClearBeforeFill {
//            get {
//                return this._clearBeforeFill;
//            }
//            set {
//                this._clearBeforeFill = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitAdapter() {
//            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
//            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
//            tableMapping.SourceTable = "Table";
//            tableMapping.DataSetTable = "Visitors";
//            tableMapping.ColumnMappings.Add("ID", "ID");
//            tableMapping.ColumnMappings.Add("Name", "Name");
//            tableMapping.ColumnMappings.Add("Surname", "Surname");
//            tableMapping.ColumnMappings.Add("Phone", "Phone");
//            tableMapping.ColumnMappings.Add("IDTicket", "IDTicket");
//            this._adapter.TableMappings.Add(tableMapping);
//            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.DeleteCommand.Connection = this.Connection;
//            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Visitors] WHERE (([ID] = @Original_ID) AND ([Name] = @Original" +
//                "_Name) AND ([Surname] = @Original_Surname) AND ([Phone] = @Original_Phone) AND (" +
//                "[IDTicket] = @Original_IDTicket))";
//            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDTicket", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDTicket", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.InsertCommand.Connection = this.Connection;
//            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Visitors] ([ID], [Name], [Surname], [Phone], [IDTicket]) VALUE" +
//                "S (@ID, @Name, @Surname, @Phone, @IDTicket);\r\nSELECT ID, Name, Surname, Phone, I" +
//                "DTicket FROM Visitors WHERE (ID = @ID)";
//            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDTicket", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDTicket", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
//            this._adapter.UpdateCommand.Connection = this.Connection;
//            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Visitors] SET [ID] = @ID, [Name] = @Name, [Surname] = @Surname, [Phone] = @Phone, [IDTicket] = @IDTicket WHERE (([ID] = @Original_ID) AND ([Name] = @Original_Name) AND ([Surname] = @Original_Surname) AND ([Phone] = @Original_Phone) AND ([IDTicket] = @Original_IDTicket));
//SELECT ID, Name, Surname, Phone, IDTicket FROM Visitors WHERE (ID = @ID)";
//            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDTicket", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDTicket", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Surname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Surname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IDTicket", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IDTicket", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitConnection() {
//            this._connection = new global::System.Data.SqlClient.SqlConnection();
//            this._connection.ConnectionString = global::KaSSierYaremko.Properties.Settings.Default.BiletsConnectionString;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private void InitCommandCollection() {
//            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
//            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
//            this._commandCollection[0].Connection = this.Connection;
//            this._commandCollection[0].CommandText = "SELECT ID, Name, Surname, Phone, IDTicket FROM dbo.Visitors";
//            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
//        public virtual int Fill(BiletsDataSet.VisitorsDataTable dataTable) {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            if ((this.ClearBeforeFill == true)) {
//                dataTable.Clear();
//            }
//            int returnValue = this.Adapter.Fill(dataTable);
//            return returnValue;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
//        public virtual BiletsDataSet.VisitorsDataTable GetData() {
//            this.Adapter.SelectCommand = this.CommandCollection[0];
//            BiletsDataSet.VisitorsDataTable dataTable = new BiletsDataSet.VisitorsDataTable();
//            this.Adapter.Fill(dataTable);
//            return dataTable;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet.VisitorsDataTable dataTable) {
//            return this.Adapter.Update(dataTable);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(BiletsDataSet dataSet) {
//            return this.Adapter.Update(dataSet, "Visitors");
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow dataRow) {
//            return this.Adapter.Update(new global::System.Data.DataRow[] {
//                        dataRow});
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        public virtual int Update(global::System.Data.DataRow[] dataRows) {
//            return this.Adapter.Update(dataRows);
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
//        public virtual int Delete(int Original_ID, string Original_Name, string Original_Surname, string Original_Phone, int Original_IDTicket) {
//            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
//            if ((Original_Name == null)) {
//                throw new global::System.ArgumentNullException("Original_Name");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));
//            }
//            if ((Original_Surname == null)) {
//                throw new global::System.ArgumentNullException("Original_Surname");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Surname));
//            }
//            if ((Original_Phone == null)) {
//                throw new global::System.ArgumentNullException("Original_Phone");
//            }
//            else {
//                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Phone));
//            }
//            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_IDTicket));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
//            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.DeleteCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.DeleteCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
//        public virtual int Insert(int ID, string Name, string Surname, string Phone, int IDTicket) {
//            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID));
//            if ((Name == null)) {
//                throw new global::System.ArgumentNullException("Name");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Name));
//            }
//            if ((Surname == null)) {
//                throw new global::System.ArgumentNullException("Surname");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Surname));
//            }
//            if ((Phone == null)) {
//                throw new global::System.ArgumentNullException("Phone");
//            }
//            else {
//                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Phone));
//            }
//            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(IDTicket));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
//            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.InsertCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.InsertCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(int ID, string Name, string Surname, string Phone, int IDTicket, int Original_ID, string Original_Name, string Original_Surname, string Original_Phone, int Original_IDTicket) {
//            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID));
//            if ((Name == null)) {
//                throw new global::System.ArgumentNullException("Name");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Name));
//            }
//            if ((Surname == null)) {
//                throw new global::System.ArgumentNullException("Surname");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Surname));
//            }
//            if ((Phone == null)) {
//                throw new global::System.ArgumentNullException("Phone");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Phone));
//            }
//            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(IDTicket));
//            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID));
//            if ((Original_Name == null)) {
//                throw new global::System.ArgumentNullException("Original_Name");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Name));
//            }
//            if ((Original_Surname == null)) {
//                throw new global::System.ArgumentNullException("Original_Surname");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Surname));
//            }
//            if ((Original_Phone == null)) {
//                throw new global::System.ArgumentNullException("Original_Phone");
//            }
//            else {
//                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Phone));
//            }
//            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_IDTicket));
//            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
//            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
//                        != global::System.Data.ConnectionState.Open)) {
//                this.Adapter.UpdateCommand.Connection.Open();
//            }
//            try {
//                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
//                return returnValue;
//            }
//            finally {
//                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
//                    this.Adapter.UpdateCommand.Connection.Close();
//                }
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
//        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
//        public virtual int Update(string Name, string Surname, string Phone, int IDTicket, int Original_ID, string Original_Name, string Original_Surname, string Original_Phone, int Original_IDTicket) {
//            return this.Update(Original_ID, Name, Surname, Phone, IDTicket, Original_ID, Original_Name, Original_Surname, Original_Phone, Original_IDTicket);
//        }
//    }
    
//    /// <summary>
//    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
//    ///</summary>
//    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
//    [global::System.ComponentModel.ToolboxItem(true)]
//    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
//        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
//    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
//    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
//        private UpdateOrderOption _updateOrder;
        
//        private Event_StatusTableAdapter _event_StatusTableAdapter;
        
//        private EventsTableAdapter _eventsTableAdapter;
        
//        private HallTableAdapter _hallTableAdapter;
        
//        private LogingTableAdapter _logingTableAdapter;
        
//        private PlaceTableAdapter _placeTableAdapter;
        
//        private RoleTableAdapter _roleTableAdapter;
        
//        private SeatTableAdapter _seatTableAdapter;
        
//        private SectorTableAdapter _sectorTableAdapter;
        
//        private TicketsTableAdapter _ticketsTableAdapter;
        
//        private TicketTypeTableAdapter _ticketTypeTableAdapter;
        
//        private UsersTableAdapter _usersTableAdapter;
        
//        private VisitorsTableAdapter _visitorsTableAdapter;
        
//        private bool _backupDataSetBeforeUpdate;
        
//        private global::System.Data.IDbConnection _connection;
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public UpdateOrderOption UpdateOrder {
//            get {
//                return this._updateOrder;
//            }
//            set {
//                this._updateOrder = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public Event_StatusTableAdapter Event_StatusTableAdapter {
//            get {
//                return this._event_StatusTableAdapter;
//            }
//            set {
//                this._event_StatusTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public EventsTableAdapter EventsTableAdapter {
//            get {
//                return this._eventsTableAdapter;
//            }
//            set {
//                this._eventsTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public HallTableAdapter HallTableAdapter {
//            get {
//                return this._hallTableAdapter;
//            }
//            set {
//                this._hallTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public LogingTableAdapter LogingTableAdapter {
//            get {
//                return this._logingTableAdapter;
//            }
//            set {
//                this._logingTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public PlaceTableAdapter PlaceTableAdapter {
//            get {
//                return this._placeTableAdapter;
//            }
//            set {
//                this._placeTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public RoleTableAdapter RoleTableAdapter {
//            get {
//                return this._roleTableAdapter;
//            }
//            set {
//                this._roleTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public SeatTableAdapter SeatTableAdapter {
//            get {
//                return this._seatTableAdapter;
//            }
//            set {
//                this._seatTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public SectorTableAdapter SectorTableAdapter {
//            get {
//                return this._sectorTableAdapter;
//            }
//            set {
//                this._sectorTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public TicketsTableAdapter TicketsTableAdapter {
//            get {
//                return this._ticketsTableAdapter;
//            }
//            set {
//                this._ticketsTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public TicketTypeTableAdapter TicketTypeTableAdapter {
//            get {
//                return this._ticketTypeTableAdapter;
//            }
//            set {
//                this._ticketTypeTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public UsersTableAdapter UsersTableAdapter {
//            get {
//                return this._usersTableAdapter;
//            }
//            set {
//                this._usersTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
//            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
//            "a", "System.Drawing.Design.UITypeEditor")]
//        public VisitorsTableAdapter VisitorsTableAdapter {
//            get {
//                return this._visitorsTableAdapter;
//            }
//            set {
//                this._visitorsTableAdapter = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public bool BackupDataSetBeforeUpdate {
//            get {
//                return this._backupDataSetBeforeUpdate;
//            }
//            set {
//                this._backupDataSetBeforeUpdate = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        public global::System.Data.IDbConnection Connection {
//            get {
//                if ((this._connection != null)) {
//                    return this._connection;
//                }
//                if (((this._event_StatusTableAdapter != null) 
//                            && (this._event_StatusTableAdapter.Connection != null))) {
//                    return this._event_StatusTableAdapter.Connection;
//                }
//                if (((this._eventsTableAdapter != null) 
//                            && (this._eventsTableAdapter.Connection != null))) {
//                    return this._eventsTableAdapter.Connection;
//                }
//                if (((this._hallTableAdapter != null) 
//                            && (this._hallTableAdapter.Connection != null))) {
//                    return this._hallTableAdapter.Connection;
//                }
//                if (((this._logingTableAdapter != null) 
//                            && (this._logingTableAdapter.Connection != null))) {
//                    return this._logingTableAdapter.Connection;
//                }
//                if (((this._placeTableAdapter != null) 
//                            && (this._placeTableAdapter.Connection != null))) {
//                    return this._placeTableAdapter.Connection;
//                }
//                if (((this._roleTableAdapter != null) 
//                            && (this._roleTableAdapter.Connection != null))) {
//                    return this._roleTableAdapter.Connection;
//                }
//                if (((this._seatTableAdapter != null) 
//                            && (this._seatTableAdapter.Connection != null))) {
//                    return this._seatTableAdapter.Connection;
//                }
//                if (((this._sectorTableAdapter != null) 
//                            && (this._sectorTableAdapter.Connection != null))) {
//                    return this._sectorTableAdapter.Connection;
//                }
//                if (((this._ticketsTableAdapter != null) 
//                            && (this._ticketsTableAdapter.Connection != null))) {
//                    return this._ticketsTableAdapter.Connection;
//                }
//                if (((this._ticketTypeTableAdapter != null) 
//                            && (this._ticketTypeTableAdapter.Connection != null))) {
//                    return this._ticketTypeTableAdapter.Connection;
//                }
//                if (((this._usersTableAdapter != null) 
//                            && (this._usersTableAdapter.Connection != null))) {
//                    return this._usersTableAdapter.Connection;
//                }
//                if (((this._visitorsTableAdapter != null) 
//                            && (this._visitorsTableAdapter.Connection != null))) {
//                    return this._visitorsTableAdapter.Connection;
//                }
//                return null;
//            }
//            set {
//                this._connection = value;
//            }
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        [global::System.ComponentModel.Browsable(false)]
//        public int TableAdapterInstanceCount {
//            get {
//                int count = 0;
//                if ((this._event_StatusTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._eventsTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._hallTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._logingTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._placeTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._roleTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._seatTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._sectorTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._ticketsTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._ticketTypeTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._usersTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                if ((this._visitorsTableAdapter != null)) {
//                    count = (count + 1);
//                }
//                return count;
//            }
//        }
        
//        /// <summary>
//        ///Update rows in top-down order.
//        ///</summary>
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private int UpdateUpdatedRows(BiletsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
//            int result = 0;
//            if ((this._roleTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.Role.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._roleTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._event_StatusTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.Event_Status.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._event_StatusTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._seatTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.Seat.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._seatTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._usersTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.Users.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._usersTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._eventsTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.Events.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._eventsTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._placeTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.Place.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._placeTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._sectorTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.Sector.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._sectorTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._ticketTypeTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.TicketType.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._ticketTypeTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._hallTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.Hall.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._hallTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._ticketsTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.Tickets.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._ticketsTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._logingTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.Loging.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._logingTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            if ((this._visitorsTableAdapter != null)) {
//                global::System.Data.DataRow[] updatedRows = dataSet.Visitors.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
//                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
//                if (((updatedRows != null) 
//                            && (0 < updatedRows.Length))) {
//                    result = (result + this._visitorsTableAdapter.Update(updatedRows));
//                    allChangedRows.AddRange(updatedRows);
//                }
//            }
//            return result;
//        }
        
//        /// <summary>
//        ///Insert rows in top-down order.
//        ///</summary>
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private int UpdateInsertedRows(BiletsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
//            int result = 0;
//            if ((this._roleTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.Role.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._roleTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._event_StatusTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.Event_Status.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._event_StatusTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._seatTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.Seat.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._seatTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._usersTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.Users.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._usersTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._eventsTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.Events.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._eventsTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._placeTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.Place.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._placeTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._sectorTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.Sector.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._sectorTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._ticketTypeTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.TicketType.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._ticketTypeTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._hallTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.Hall.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._hallTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._ticketsTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.Tickets.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._ticketsTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._logingTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.Loging.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._logingTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            if ((this._visitorsTableAdapter != null)) {
//                global::System.Data.DataRow[] addedRows = dataSet.Visitors.Select(null, null, global::System.Data.DataViewRowState.Added);
//                if (((addedRows != null) 
//                            && (0 < addedRows.Length))) {
//                    result = (result + this._visitorsTableAdapter.Update(addedRows));
//                    allAddedRows.AddRange(addedRows);
//                }
//            }
//            return result;
//        }
        
//        /// <summary>
//        ///Delete rows in bottom-up order.
//        ///</summary>
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private int UpdateDeletedRows(BiletsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
//            int result = 0;
//            if ((this._visitorsTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.Visitors.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._visitorsTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._logingTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.Loging.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._logingTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._ticketsTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.Tickets.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._ticketsTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._hallTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.Hall.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._hallTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._ticketTypeTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.TicketType.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._ticketTypeTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._sectorTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.Sector.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._sectorTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._placeTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.Place.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._placeTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._eventsTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.Events.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._eventsTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._usersTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.Users.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._usersTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._seatTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.Seat.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._seatTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._event_StatusTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.Event_Status.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._event_StatusTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            if ((this._roleTableAdapter != null)) {
//                global::System.Data.DataRow[] deletedRows = dataSet.Role.Select(null, null, global::System.Data.DataViewRowState.Deleted);
//                if (((deletedRows != null) 
//                            && (0 < deletedRows.Length))) {
//                    result = (result + this._roleTableAdapter.Update(deletedRows));
//                    allChangedRows.AddRange(deletedRows);
//                }
//            }
//            return result;
//        }
        
//        /// <summary>
//        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
//        ///</summary>
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
//            if (((updatedRows == null) 
//                        || (updatedRows.Length < 1))) {
//                return updatedRows;
//            }
//            if (((allAddedRows == null) 
//                        || (allAddedRows.Count < 1))) {
//                return updatedRows;
//            }
//            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
//            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
//                global::System.Data.DataRow row = updatedRows[i];
//                if ((allAddedRows.Contains(row) == false)) {
//                    realUpdatedRows.Add(row);
//                }
//            }
//            return realUpdatedRows.ToArray();
//        }
        
//        /// <summary>
//        ///Update all changes to the dataset.
//        ///</summary>
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public virtual int UpdateAll(BiletsDataSet dataSet) {
//            if ((dataSet == null)) {
//                throw new global::System.ArgumentNullException("dataSet");
//            }
//            if ((dataSet.HasChanges() == false)) {
//                return 0;
//            }
//            if (((this._event_StatusTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._event_StatusTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
//                        "r, должны использовать одинаковую строку подключения.");
//            }
//            if (((this._eventsTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._eventsTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
//                        "r, должны использовать одинаковую строку подключения.");
//            }
//            if (((this._hallTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._hallTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
//                        "r, должны использовать одинаковую строку подключения.");
//            }
//            if (((this._logingTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._logingTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
//                        "r, должны использовать одинаковую строку подключения.");
//            }
//            if (((this._placeTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._placeTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
//                        "r, должны использовать одинаковую строку подключения.");
//            }
//            if (((this._roleTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._roleTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
//                        "r, должны использовать одинаковую строку подключения.");
//            }
//            if (((this._seatTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._seatTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
//                        "r, должны использовать одинаковую строку подключения.");
//            }
//            if (((this._sectorTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._sectorTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
//                        "r, должны использовать одинаковую строку подключения.");
//            }
//            if (((this._ticketsTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._ticketsTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
//                        "r, должны использовать одинаковую строку подключения.");
//            }
//            if (((this._ticketTypeTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._ticketTypeTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
//                        "r, должны использовать одинаковую строку подключения.");
//            }
//            if (((this._usersTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._usersTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
//                        "r, должны использовать одинаковую строку подключения.");
//            }
//            if (((this._visitorsTableAdapter != null) 
//                        && (this.MatchTableAdapterConnection(this._visitorsTableAdapter.Connection) == false))) {
//                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
//                        "r, должны использовать одинаковую строку подключения.");
//            }
//            global::System.Data.IDbConnection workConnection = this.Connection;
//            if ((workConnection == null)) {
//                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
//                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
//            }
//            bool workConnOpened = false;
//            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
//                        == global::System.Data.ConnectionState.Broken)) {
//                workConnection.Close();
//            }
//            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
//                workConnection.Open();
//                workConnOpened = true;
//            }
//            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
//            if ((workTransaction == null)) {
//                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
//                        "и или текущее состояние не позволяет начать транзакцию.");
//            }
//            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
//            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
//            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
//            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
//            int result = 0;
//            global::System.Data.DataSet backupDataSet = null;
//            if (this.BackupDataSetBeforeUpdate) {
//                backupDataSet = new global::System.Data.DataSet();
//                backupDataSet.Merge(dataSet);
//            }
//            try {
//                // ---- Prepare for update -----------
//                //
//                if ((this._event_StatusTableAdapter != null)) {
//                    revertConnections.Add(this._event_StatusTableAdapter, this._event_StatusTableAdapter.Connection);
//                    this._event_StatusTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._event_StatusTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._event_StatusTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._event_StatusTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._event_StatusTableAdapter.Adapter);
//                    }
//                }
//                if ((this._eventsTableAdapter != null)) {
//                    revertConnections.Add(this._eventsTableAdapter, this._eventsTableAdapter.Connection);
//                    this._eventsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._eventsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._eventsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._eventsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._eventsTableAdapter.Adapter);
//                    }
//                }
//                if ((this._hallTableAdapter != null)) {
//                    revertConnections.Add(this._hallTableAdapter, this._hallTableAdapter.Connection);
//                    this._hallTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._hallTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._hallTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._hallTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._hallTableAdapter.Adapter);
//                    }
//                }
//                if ((this._logingTableAdapter != null)) {
//                    revertConnections.Add(this._logingTableAdapter, this._logingTableAdapter.Connection);
//                    this._logingTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._logingTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._logingTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._logingTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._logingTableAdapter.Adapter);
//                    }
//                }
//                if ((this._placeTableAdapter != null)) {
//                    revertConnections.Add(this._placeTableAdapter, this._placeTableAdapter.Connection);
//                    this._placeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._placeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._placeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._placeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._placeTableAdapter.Adapter);
//                    }
//                }
//                if ((this._roleTableAdapter != null)) {
//                    revertConnections.Add(this._roleTableAdapter, this._roleTableAdapter.Connection);
//                    this._roleTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._roleTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._roleTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._roleTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._roleTableAdapter.Adapter);
//                    }
//                }
//                if ((this._seatTableAdapter != null)) {
//                    revertConnections.Add(this._seatTableAdapter, this._seatTableAdapter.Connection);
//                    this._seatTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._seatTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._seatTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._seatTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._seatTableAdapter.Adapter);
//                    }
//                }
//                if ((this._sectorTableAdapter != null)) {
//                    revertConnections.Add(this._sectorTableAdapter, this._sectorTableAdapter.Connection);
//                    this._sectorTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._sectorTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._sectorTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._sectorTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._sectorTableAdapter.Adapter);
//                    }
//                }
//                if ((this._ticketsTableAdapter != null)) {
//                    revertConnections.Add(this._ticketsTableAdapter, this._ticketsTableAdapter.Connection);
//                    this._ticketsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._ticketsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._ticketsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._ticketsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._ticketsTableAdapter.Adapter);
//                    }
//                }
//                if ((this._ticketTypeTableAdapter != null)) {
//                    revertConnections.Add(this._ticketTypeTableAdapter, this._ticketTypeTableAdapter.Connection);
//                    this._ticketTypeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._ticketTypeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._ticketTypeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._ticketTypeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._ticketTypeTableAdapter.Adapter);
//                    }
//                }
//                if ((this._usersTableAdapter != null)) {
//                    revertConnections.Add(this._usersTableAdapter, this._usersTableAdapter.Connection);
//                    this._usersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._usersTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._usersTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._usersTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._usersTableAdapter.Adapter);
//                    }
//                }
//                if ((this._visitorsTableAdapter != null)) {
//                    revertConnections.Add(this._visitorsTableAdapter, this._visitorsTableAdapter.Connection);
//                    this._visitorsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
//                    this._visitorsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
//                    if (this._visitorsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
//                        this._visitorsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
//                        adaptersWithAcceptChangesDuringUpdate.Add(this._visitorsTableAdapter.Adapter);
//                    }
//                }
//                // 
//                //---- Perform updates -----------
//                //
//                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
//                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
//                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
//                }
//                else {
//                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
//                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
//                }
//                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
//                // 
//                //---- Commit updates -----------
//                //
//                workTransaction.Commit();
//                if ((0 < allAddedRows.Count)) {
//                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
//                    allAddedRows.CopyTo(rows);
//                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
//                        global::System.Data.DataRow row = rows[i];
//                        row.AcceptChanges();
//                    }
//                }
//                if ((0 < allChangedRows.Count)) {
//                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
//                    allChangedRows.CopyTo(rows);
//                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
//                        global::System.Data.DataRow row = rows[i];
//                        row.AcceptChanges();
//                    }
//                }
//            }
//            catch (global::System.Exception ex) {
//                workTransaction.Rollback();
//                // ---- Restore the dataset -----------
//                if (this.BackupDataSetBeforeUpdate) {
//                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
//                    dataSet.Clear();
//                    dataSet.Merge(backupDataSet);
//                }
//                else {
//                    if ((0 < allAddedRows.Count)) {
//                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
//                        allAddedRows.CopyTo(rows);
//                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
//                            global::System.Data.DataRow row = rows[i];
//                            row.AcceptChanges();
//                            row.SetAdded();
//                        }
//                    }
//                }
//                throw ex;
//            }
//            finally {
//                if (workConnOpened) {
//                    workConnection.Close();
//                }
//                if ((this._event_StatusTableAdapter != null)) {
//                    this._event_StatusTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._event_StatusTableAdapter]));
//                    this._event_StatusTableAdapter.Transaction = null;
//                }
//                if ((this._eventsTableAdapter != null)) {
//                    this._eventsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eventsTableAdapter]));
//                    this._eventsTableAdapter.Transaction = null;
//                }
//                if ((this._hallTableAdapter != null)) {
//                    this._hallTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._hallTableAdapter]));
//                    this._hallTableAdapter.Transaction = null;
//                }
//                if ((this._logingTableAdapter != null)) {
//                    this._logingTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._logingTableAdapter]));
//                    this._logingTableAdapter.Transaction = null;
//                }
//                if ((this._placeTableAdapter != null)) {
//                    this._placeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._placeTableAdapter]));
//                    this._placeTableAdapter.Transaction = null;
//                }
//                if ((this._roleTableAdapter != null)) {
//                    this._roleTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._roleTableAdapter]));
//                    this._roleTableAdapter.Transaction = null;
//                }
//                if ((this._seatTableAdapter != null)) {
//                    this._seatTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._seatTableAdapter]));
//                    this._seatTableAdapter.Transaction = null;
//                }
//                if ((this._sectorTableAdapter != null)) {
//                    this._sectorTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sectorTableAdapter]));
//                    this._sectorTableAdapter.Transaction = null;
//                }
//                if ((this._ticketsTableAdapter != null)) {
//                    this._ticketsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._ticketsTableAdapter]));
//                    this._ticketsTableAdapter.Transaction = null;
//                }
//                if ((this._ticketTypeTableAdapter != null)) {
//                    this._ticketTypeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._ticketTypeTableAdapter]));
//                    this._ticketTypeTableAdapter.Transaction = null;
//                }
//                if ((this._usersTableAdapter != null)) {
//                    this._usersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._usersTableAdapter]));
//                    this._usersTableAdapter.Transaction = null;
//                }
//                if ((this._visitorsTableAdapter != null)) {
//                    this._visitorsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._visitorsTableAdapter]));
//                    this._visitorsTableAdapter.Transaction = null;
//                }
//                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
//                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
//                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
//                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
//                        global::System.Data.Common.DataAdapter adapter = adapters[i];
//                        adapter.AcceptChangesDuringUpdate = true;
//                    }
//                }
//            }
//            return result;
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
//            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
//        }
        
//        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
//            if ((this._connection != null)) {
//                return true;
//            }
//            if (((this.Connection == null) 
//                        || (inputConnection == null))) {
//                return true;
//            }
//            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
//                return true;
//            }
//            return false;
//        }
        
//        /// <summary>
//        ///Update Order Option
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        public enum UpdateOrderOption {
            
//            InsertUpdateDelete = 0,
            
//            UpdateInsertDelete = 1,
//        }
        
//        /// <summary>
//        ///Used to sort self-referenced table's rows
//        ///</summary>
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
//            private global::System.Data.DataRelation _relation;
            
//            private int _childFirst;
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
//                this._relation = relation;
//                if (childFirst) {
//                    this._childFirst = -1;
//                }
//                else {
//                    this._childFirst = 1;
//                }
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
//                global::System.Diagnostics.Debug.Assert((row != null));
//                global::System.Data.DataRow root = row;
//                distance = 0;

//                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
//                traversedRows[row] = row;

//                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
//                for (
//                ; ((parent != null) 
//                            && (traversedRows.ContainsKey(parent) == false)); 
//                ) {
//                    distance = (distance + 1);
//                    root = parent;
//                    traversedRows[parent] = parent;
//                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
//                }

//                if ((distance == 0)) {
//                    traversedRows.Clear();
//                    traversedRows[row] = row;
//                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
//                    for (
//                    ; ((parent != null) 
//                                && (traversedRows.ContainsKey(parent) == false)); 
//                    ) {
//                        distance = (distance + 1);
//                        root = parent;
//                        traversedRows[parent] = parent;
//                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
//                    }
//                }

//                return root;
//            }
            
//            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
//            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
//            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
//                if (object.ReferenceEquals(row1, row2)) {
//                    return 0;
//                }
//                if ((row1 == null)) {
//                    return -1;
//                }
//                if ((row2 == null)) {
//                    return 1;
//                }

//                int distance1 = 0;
//                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

//                int distance2 = 0;
//                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

//                if (object.ReferenceEquals(root1, root2)) {
//                    return (this._childFirst * distance1.CompareTo(distance2));
//                }
//                else {
//                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
//                                    && (root2.Table != null)));
//                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
//                        return -1;
//                    }
//                    else {
//                        return 1;
//                    }
//                }
//            }
//        }
//    }
//}

//#pragma warning restore 1591